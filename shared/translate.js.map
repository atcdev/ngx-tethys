{"version":3,"file":"translate.js","sourceRoot":"","sources":["../../.tmp/shared/translate.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAY,MAAM,MAAM,CAAC;;AAK5C;IAAA;KAgBC;IAfG,8BAAO,GAAP,UACI,GAA2B,EAC3B,iBAA0B;QAE1B,OAAO,GAAG,CAAC;IACf,CAAC;IAED,0BAAG,GAAH,UACI,GAA2B,EAC3B,iBAA0B;QAE1B,OAAO,UAAU,CAAC,MAAM,CAAC,UAAC,QAAuB;YAC7C,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;;IAfQ,YAAY;QAHxB,UAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;OACW,YAAY,CAgBxB;uBAtBD;CAsBC,AAhBD,IAgBC;SAhBY,YAAY","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyTranslate {\n    instant(\n        key: string | Array<string>,\n        interpolateParams?: Object\n    ): string | any {\n        return key;\n    }\n\n    get(\n        key: string | Array<string>,\n        interpolateParams?: Object\n    ): Observable<string | any> {\n        return Observable.create((observer: Observer<any>) => {\n            observer.next(key);\n        });\n    }\n}\n"]}
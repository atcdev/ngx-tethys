{"version":3,"file":"slide-container.component.js","sourceRoot":"","sources":["../../.tmp/slide/slide-container.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostListener, ElementRef, HostBinding, Renderer2, OnInit, Input } from '@angular/core';\nimport { ThySlideRef } from './slide-ref.service';\nimport { ThySlideOption } from './slide-options.class';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UpdateHostClassService } from '../shared';\n\n@Component({\n    selector: 'thy-slide-container',\n    template: `\n        <div [class]=\"'slide-dialog' + (thySlideClass ? ' ' + thySlideClass : '')\" [@flyInOut]=\"flyInOut\">\n            <ng-container *ngIf=\"isShow\"><ng-content></ng-content></ng-container>\n        </div>\n    `,\n    providers: [UpdateHostClassService],\n    animations: [\n        trigger('flyInOut', [\n            state('left', style({ transform: '*' })),\n            state('right', style({ transform: '*' })),\n            state('top', style({ transform: '*' })),\n            state('bottom', style({ transform: '*' })),\n            transition('void => left', [style({ transform: 'translateX(-100%)' }), animate('0.2s ease-in')]),\n            transition('left => void', [animate('0.2s', style({ transform: 'translateX(-100%)' }))]),\n            transition('void => right', [style({ transform: 'translateX(100%)' }), animate('0.2s ease-in')]),\n            transition('right => void', [animate('0.2s', style({ transform: 'translateX(100%)' }))]),\n            transition('void => top', [style({ transform: 'translateY(-100%)' }), animate('0.2s ease-in')]),\n            transition('top => void', [animate('0.2s', style({ transform: 'translateY(-100%)' }))]),\n            transition('void => bottom', [style({ transform: 'translateY(100%)' }), animate('0.2s ease-in')]),\n            transition('bottom => void', [animate('0.2s', style({ transform: 'translateY(100%)' }))])\n        ])\n    ]\n})\nexport class ThySlideContainerComponent implements OnInit {\n    @HostBinding('class.slide') slideClass = true;\n\n    private _nativeElement: any;\n\n    public flyInOut: string;\n\n    public thySlideClass: string;\n\n    public thycontainerClass: string;\n\n    public isShow = false;\n\n    public isHide: boolean;\n\n    thySlideService: any;\n\n    private _setClasses() {\n        if (this.thycontainerClass) {\n            const classNames: string[] = [this.thycontainerClass];\n            this.updateHostClassService.updateClass(classNames);\n        }\n    }\n\n    constructor(\n        private thySlideRef: ThySlideRef,\n        private elementRef: ElementRef,\n        private thySlideOption: ThySlideOption,\n        private renderer: Renderer2,\n        private updateHostClassService: UpdateHostClassService\n    ) {\n        this._nativeElement = this.elementRef.nativeElement;\n        this.updateHostClassService.initializeElement(this._nativeElement);\n    }\n\n    ngOnInit() {\n        this.slideClass = this.thySlideOption.hasBackdrop;\n        this.flyInOut = this.thySlideOption.from;\n        this.thySlideClass = this.thySlideOption.class;\n        this.thycontainerClass = this.thySlideOption.containerClass;\n        this._setClasses();\n        setTimeout(() => {\n            this.isShow = true;\n        }, 200);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: any): void {\n        if (this.thySlideService._isHide || event.target === this.elementRef.nativeElement) {\n            this.flyInOut = 'void';\n            this.thySlideRef.hide();\n        }\n    }\n}\n"]}
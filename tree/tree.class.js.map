{"version":3,"file":"tree.class.js","sourceRoot":"","sources":["../../.tmp/tree/tree.class.ts"],"names":[],"mappings":"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","sourcesContent":["import { helpers } from '../util';\nimport { ThyTreeService } from './tree.service';\n\nexport interface ThyTreeNodeData {\n    key?: number | string;\n\n    title?: string;\n\n    icon?: string;\n\n    iconStyle?: {\n        [key: string]: any;\n    };\n\n    children?: ThyTreeNodeData[];\n\n    origin?: any;\n\n    expanded?: boolean;\n\n    edited?: boolean;\n\n    disabled?: boolean;\n\n    [key: string]: any;\n}\n\nexport class ThyTreeNode {\n    key?: number | string;\n\n    title?: string;\n\n    children: ThyTreeNode[];\n\n    parentNode: ThyTreeNode;\n\n    level = 0;\n\n    origin: ThyTreeNodeData;\n\n    isExpanded: boolean;\n\n    isLoading: boolean;\n\n    isDisabled: boolean;\n\n    private readonly service: ThyTreeService;\n\n    get treeService(): ThyTreeService {\n        if (this.service) {\n            return this.service;\n        } else if (this.parentNode) {\n            return this.parentNode.treeService;\n        }\n    }\n\n    constructor(node: ThyTreeNodeData, parent: ThyTreeNode = null, service?: ThyTreeService) {\n        this.title = node.title;\n        this.key = node.key || null;\n        this.children = [];\n        this.parentNode = parent;\n        this.level = parent ? this.level + 1 : this.level;\n        this.origin = node;\n        this.isDisabled = node.disabled || false;\n        this.isExpanded = node.expanded || false;\n        this.isLoading = false;\n        if (node.children) {\n            node.children.forEach(childNode => {\n                this.children.push(new ThyTreeNode(childNode, this));\n            });\n        }\n        this.service = service;\n    }\n\n    public setKey(key: string) {\n        this.origin.key = key;\n        this.key = key;\n    }\n\n    public setTitle(title: string) {\n        this.origin.title = title;\n        this.title = title;\n    }\n\n    public setExpanded(expanded: boolean) {\n        this.origin.expanded = expanded;\n        this.isExpanded = expanded;\n    }\n\n    public setLoading(loading: boolean): void {\n        this.isLoading = loading;\n    }\n\n    public getParentNode(): ThyTreeNode {\n        return this.parentNode;\n    }\n\n    public getChildren(): ThyTreeNode[] {\n        return this.children;\n    }\n\n    public addChildren(children: ThyTreeNodeData | ThyTreeNodeData[], index: number = -1): void {\n        if (!helpers.isArray(children)) {\n            children = [children];\n        }\n        ((children as ThyTreeNodeData[]) || []).forEach((childNode: ThyTreeNodeData, i: number) => {\n            if (index === -1) {\n                this.children.push(new ThyTreeNode(childNode, this));\n            } else {\n                this.children.splice(index + i, 0, new ThyTreeNode(childNode, this, this.treeService));\n            }\n        });\n\n        this.origin.children = this.getChildren().map(n => n.origin);\n        this.setLoading(false);\n        this.treeService.$statusChange.next({\n            eventName: 'addChildren',\n            node: this\n        });\n    }\n}\n\nexport interface ThyTreeEmitEvent {\n    eventName: string;\n\n    node?: ThyTreeNode;\n\n    event?: Event | any;\n\n    dragNode?: ThyTreeNode;\n\n    targetNode?: ThyTreeNode;\n}\n"]}
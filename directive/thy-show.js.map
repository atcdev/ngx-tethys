{"version":3,"file":"thy-show.js","sourceRoot":"","sources":["../../.tmp/directive/thy-show.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACH,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EACvC,MAAM,EAAE,YAAY,EACvB,MAAM,eAAe,CAAC;AAGvB;IA8BI,0BACY,UAAsB,EACtB,QAAmB;QADnB,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QA9BrB,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;IA+BzC,CAAC;IA3BG,2CAAgB,GAAxB;QACI,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;IACL,CAAC;IAEQ,sBAAI,qCAAO;aAAX,UAAY,SAAkB;YAAvC,iBAeC;YAdG,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;gBAC1E,UAAU,CAAC;oBACP,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,UAAC,KAAK;wBACpE,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;4BACvD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;4BAC/B,KAAI,CAAC,gBAAgB,EAAE,CAAC;yBAC3B;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;gBACzE,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;QACL,CAAC;;;OAAA;IAOD,sCAAW,GAAX;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAnCS;QAAT,MAAM,EAAE;;2DAAoC;IAWpC;QAAR,KAAK,EAAE;;;mDAeP;IA5BQ,gBAAgB;QAD5B,SAAS,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;yCAgCT,UAAU;YACZ,SAAS;OAhCtB,gBAAgB,CAsC5B;IAAD,uBAAC;CAAA,AAtCD,IAsCC;SAtCY,gBAAgB","sourcesContent":["import {\n    Directive, Renderer2, Input, ElementRef,\n    Output, EventEmitter, OnDestroy\n} from '@angular/core';\n\n@Directive({ selector: '[thyShow]' })\nexport class ThyShowDirective implements OnDestroy {\n\n    @Output() thyShowChange = new EventEmitter();\n\n    private unListenEvent: () => void;\n\n    private unListenDocument() {\n        if (this.unListenEvent) {\n            this.unListenEvent();\n            this.unListenEvent = null;\n        }\n    }\n\n    @Input() set thyShow(condition: boolean) {\n        if (condition) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'block');\n            setTimeout(() => {\n                this.unListenDocument = this.renderer.listen('document', 'click', (event) => {\n                    if (!this.elementRef.nativeElement.contains(event.target)) {\n                        this.thyShowChange.emit(false);\n                        this.unListenDocument();\n                    }\n                });\n            });\n        } else {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n            this.unListenDocument();\n        }\n    }\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) { }\n\n    ngOnDestroy() {\n        this.unListenDocument();\n    }\n}\n"]}
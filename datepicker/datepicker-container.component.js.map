{"version":3,"file":"datepicker-container.component.js","sourceRoot":"","sources":["../../.tmp/datepicker/datepicker-container.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    OnInit,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    ViewContainerRef,\n    ComponentRef,\n    HostBinding\n} from '@angular/core';\nimport { BsDatepickerConfig, BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { DatepickerValueEntry } from './i.datepicker';\nimport { skip } from 'rxjs/operators';\n\n@Component({\n    selector: 'thy-datepicker-container',\n    template: \"<div class=\\\"thy-datepicker\\\"> <bs-datepicker-container #dpContainer></bs-datepicker-container> <div *ngIf=\\\"isShowTime || isCanTime\\\" class=\\\"timepicker-section\\\" (click)=\\\"$event.stopPropagation()\\\"> <div *ngIf=\\\"isCanTime\\\" class=\\\"timepicker-set\\\"> <a href=\\\"javascript:;\\\" class=\\\"link-has-icon timepicker-set-btn\\\" (click)=\\\"changeTimeShowMode('show')\\\"> <i class=\\\"wtf wtf-timeline-o\\\"></i>Set time</a > </div> <timepicker *ngIf=\\\"isShowTime\\\" class=\\\"timepicker-warp\\\" [(ngModel)]=\\\"value\\\" [showMeridian]=\\\"isMeridian\\\"></timepicker> <div class=\\\"timepicker-btn-warp\\\"> <button *ngIf=\\\"!isCanTime\\\" class=\\\"timepicker-ok-btn\\\" thyButton=\\\"primary\\\" thySize=\\\"sm\\\" (click)=\\\"onTimeOk()\\\"> Confirm </button> <button class=\\\"timepicker-clear-btn\\\" thyButton=\\\"link-secondary\\\" thySize=\\\"sm\\\" (click)=\\\"onClear()\\\">Clear</button> </div> </div> </div> \",\n    providers: [BsDatepickerConfig]\n})\nexport class ThyDatepickerContainerComponent implements OnInit {\n    public initialState: any;\n    hideLoader: Function;\n    value: Date;\n    maxDate: Date;\n    minDate: Date;\n    isShowTime = false;\n    isCanTime = false;\n    isMeridian = false;\n\n    @ViewChild('dpContainer')\n    private _dpContainerRef: any;\n\n    constructor(\n        private _config: BsDatepickerConfig,\n        _elementRef: ElementRef,\n        _renderer: Renderer2,\n        _viewContainerRef: ViewContainerRef,\n        private localeService: BsLocaleService\n    ) {\n        this._config.containerClass = 'theme-ngx';\n        this._config.showWeekNumbers = false;\n        this.localeService.use('en');\n    }\n\n    ngOnInit() {\n        this._initTimeShowMode();\n        this._initDataValue();\n    }\n\n    onValueChange(value: Date): void {\n        if (!this.isShowTime) {\n            this._sendChangeValueEvent();\n        }\n    }\n\n    onTimeOk() {\n        this._sendChangeValueEvent();\n    }\n\n    onClear() {\n        this._sendChangeValueEvent({\n            date: null,\n            with_time: this.initialState.valueRef.with_time\n        });\n    }\n\n    hide() {\n        this.hideLoader();\n    }\n\n    changeTimeShowMode(type: string) {\n        switch (type) {\n            case 'clear':\n                this.isCanTime = false;\n                this.isShowTime = false;\n                break;\n            case 'can':\n                this.isCanTime = true;\n                this.isShowTime = false;\n                break;\n            case 'show':\n                this.isCanTime = false;\n                this.isShowTime = true;\n                break;\n        }\n    }\n\n    private _sendChangeValueEvent(value?: DatepickerValueEntry) {\n        if (value !== undefined) {\n            this.initialState.changeValue(value);\n        } else {\n            this.initialState.changeValue({\n                date: this.value,\n                with_time: this.isShowTime\n            });\n        }\n        this.hide();\n    }\n\n    private _initDataValue() {\n        this.value = this.initialState.value.date ? new Date(this.initialState.value.date.getTime()) : new Date();\n        this._dpContainerRef._effects.init(this._dpContainerRef._store);\n        this._dpContainerRef._effects.setValue(this.value);\n        this._dpContainerRef._effects.setMinDate(this.initialState.minDate);\n        this._dpContainerRef._effects.setMaxDate(this.initialState.maxDate);\n\n        this._dpContainerRef.valueChange.pipe(skip(1)).subscribe((result: Date) => {\n            const nowDate = new Date();\n            const value = new Date(\n                result.getFullYear(),\n                result.getMonth(),\n                result.getDate(),\n                nowDate.getHours(),\n                nowDate.getMinutes(),\n                nowDate.getSeconds()\n            );\n            this.value = value;\n            this.onValueChange(value);\n        });\n    }\n\n    private _initTimeShowMode() {\n        if (this.initialState.value.with_time) {\n            this.changeTimeShowMode('show');\n        } else {\n            if (this.initialState.withTime) {\n                this.changeTimeShowMode('can');\n            }\n        }\n    }\n}\n"]}
import { OnInit, ElementRef, Renderer2, ViewContainerRef, AfterContentInit } from '@angular/core';
import { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';
import { DatepickerValueEntry } from './i.datepicker';
import { ThyDatepickerService } from './datepicker.service';
import { ControlValueAccessor } from '@angular/forms';
import { ThyPositioningService } from '../positioning/positioning.service';
import { ThyDaterangepickerConfig } from './daterangepicker.config';
export declare class ThyDaterangepickerDirective implements OnInit, AfterContentInit, ControlValueAccessor {
    private _elementRef;
    private _renderer;
    private _viewContainerRef;
    private cis;
    private service;
    private thyPositioningService;
    private _config;
    private _value;
    private _showFormatRule;
    private _onChange;
    private _onTouched;
    private _isAfterContentInit;
    private _loader;
    private _valueType;
    private _isFirstShowInputProperty;
    private store;
    thyPlacement: 'top' | 'bottom' | 'left' | 'right';
    thyTriggers: string;
    thyContainer: string;
    thyOutsideClick: boolean;
    thyDisabled: boolean;
    thyShowTime: boolean;
    thyFormat: string;
    constructor(_elementRef: ElementRef, _renderer: Renderer2, _viewContainerRef: ViewContainerRef, cis: ComponentLoaderFactory, service: ThyDatepickerService, thyPositioningService: ThyPositioningService, _config: ThyDaterangepickerConfig);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    writeValue(value: DatepickerValueEntry | Date | number): void;
    registerOnChange(fn: (value: any) => any): void;
    registerOnTouched(fn: () => any): void;
    show(): void;
    hide(): void;
    private initValueData;
    private _initFormatRule;
    private _setInputProperty;
    private _formatBeginTime;
    private _formatEndTime;
    private _sendValueToNgModel;
}

{"version":3,"file":"loading.component.js","sourceRoot":"","sources":["../../.tmp/loading/loading.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAC1G,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AAOtD;IA4BI,6BAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAFtB,qBAAgB,GAAG,IAAI,CAAC;IAEC,CAAC;IApB5D,sBAAI,wCAAO;aAAX,UAAY,KAAuB;YAC/B,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAC1C,CAAC;;;OAAA;IAGD,sBAAI,uCAAM;aAAV,UAAW,KAAa;YACpB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;YACjB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAC1C,CAAC;;;OAAA;IAID,sBAAI,0CAAS;QAFb,2BAA2B;aAE3B,UAAc,KAAuB;YACjC,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAC1C,CAAC;;;OAAA;IAhBD;QADC,KAAK,EAAE;;;sDAIP;IAGD;QADC,KAAK,EAAE;;;qDAIP;IAID;QADC,KAAK,EAAE;;;wDAIP;IAEiC;QAAjC,WAAW,CAAC,mBAAmB,CAAC;;iEAAyB;IA1BjD,mBAAmB;QAL/B,SAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,2UAA2U;YACrV,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAClD,CAAC;yCA6ByC,iBAAiB;OA5B/C,mBAAmB,CA6B/B;IAAD,0BAAC;CAAA,AA7BD,IA6BC;SA7BY,mBAAmB","sourcesContent":["import { Component, Input, HostBinding, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { inputValueToBoolean } from '../util/helpers';\n\n@Component({\n    selector: 'thy-loading',\n    template: \"<div [class.thy-loading-mask]=\\\"isMask && !isDone\\\"> <div class=\\\"thy-loading-indicator\\\" *ngIf=\\\"!isDone\\\"> <h4> <span [style.display]=\\\"tip ? 'inline' : 'none'\\\">{{tip}}</span> <div class=\\\"thy-loading-ellipsis\\\"> <span class=\\\"thy-spot\\\"></span> </div> </h4> </div> <ng-content *ngIf=\\\"isMask || isDone\\\"></ng-content> </div> \",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyLoadingComponent {\n    public isDone: boolean;\n\n    public tip: string;\n\n    public isMask: boolean;\n\n    @Input()\n    set thyDone(value: boolean | string) {\n        this.isDone = inputValueToBoolean(value);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    @Input()\n    set thyTip(value: string) {\n        this.tip = value;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    // 不传或穿false,没有遮罩层，加载完成出现内容\n    @Input()\n    set thyIsMask(value: boolean | string) {\n        this.isMask = inputValueToBoolean(value);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    @HostBinding('class.thy-loading') loadingClassName = true;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef) {}\n}\n"]}
{"version":3,"file":"date-range.component.js","sourceRoot":"","sources":["../../.tmp/date-range/date-range.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAU,KAAK,EAAE,MAAM,eAAe,CAAC;AACrE,OAAO,EAAE,iBAAiB,EAAwB,MAAM,gBAAgB,CAAC;AAEzE,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,IAAM,eAAe,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAErC,IAAM,4BAA4B,GAAQ;IACtC,OAAO,EAAE,iBAAiB;IAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,qBAAqB,EAArB,CAAqB,CAAC;IACpD,KAAK,EAAE,IAAI;CACd,CAAC;AAOF;IAsCI;QApCQ,oBAAe,GAAQ,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;QAI9G,sBAAiB,GAAwB,CAAC;gBAC7C,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,eAAe;gBACvG,GAAG,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,eAAe;gBACrG,SAAS,EAAE;oBACP,QAAQ,EAAE,CAAC;oBACX,IAAI,EAAE,KAAK;iBACd;aACJ,EAAE;gBACC,GAAG,EAAE,OAAO;gBACZ,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC3F,GAAG,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7F,SAAS,EAAE;oBACP,QAAQ,EAAE,CAAC;oBACX,IAAI,EAAE,OAAO;iBAChB;aACJ,CAAC,CAAC;QAYM,eAAU,GAAY,KAAK,CAAC;QAI9B,kBAAa,GAAa;QAEjC,CAAC,CAAA;QAEM,mBAAc,GAAa;QAElC,CAAC,CAAA;IARe,CAAC;IANjB,sBAAI,6CAAU;aAAd,UAAe,KAA0B;YACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAC/E,CAAC;;;OAAA;IAcD,0CAAU,GAAV,UAAW,KAAU;QACjB,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjC,CAAC;IAED,gDAAgB,GAAhB,UAAiB,EAAO;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,iDAAiB,GAAjB,UAAkB,EAAO;QACrB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAEO,qDAAqB,GAA7B;QACI,IAAI,CAAC,iBAAiB,GAAG;YACrB,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YACxC,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE;SACvC,CAAC;IACN,CAAC;IAEO,2CAAW,GAAnB,UAAoB,QAAc,EAAE,SAA+D;QAA/D,0BAAA,EAAA,cAA+D;QAC/F,IAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;QAC/D,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAE1D,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;IACpE,CAAC;IAEO,iDAAiB,GAAzB,UAA0B,IAAY;QAClC,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAC7B,IAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YAC3D,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;YACvD,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,KAAK,KAAK,EAAE;gBAC5C,IAAI,IAAI,KAAK,UAAU,EAAE;oBACrB,OAAO;wBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBAClF,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;wBAC7C,GAAG,EAAE,QAAQ;qBAChB,CAAC;iBACL;qBAAM;oBACH,OAAO;wBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;wBAC5C,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBAC7E,GAAG,EAAE,QAAQ;qBAChB,CAAC;iBACL;aACJ;iBAAM,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;gBACrD,IAAI,IAAI,KAAK,UAAU,EAAE;oBACrB,OAAO;wBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBACpF,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;wBAC7G,GAAG,EAAE,QAAQ;qBAChB,CAAC;iBACL;qBAAM;oBACH,OAAO;wBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBACnF,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;wBAC5G,GAAG,EAAE,QAAQ;qBAChB,CAAC;iBACL;aACJ;iBAAM,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE;gBACpD,IAAI,IAAI,KAAK,UAAU,EAAE;oBACrB,OAAO;wBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBACnF,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBAC/E,GAAG,EAAE,QAAQ;qBAChB,CAAC;iBACL;qBAAM;oBACH,OAAO;wBACH,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBAClF,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;wBAC9E,GAAG,EAAE,QAAQ;qBAChB,CAAC;iBACL;aACJ;SACJ;aAAM;YACH,IAAM,QAAQ,GAAW,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,eAAe,CAAC;YAC3F,OAAO;gBACH,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ;gBACzC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,QAAQ;gBACrC,GAAG,EAAE,QAAQ;aAChB,CAAC;SACL;IACL,CAAC;IAEO,sDAAsB,GAA9B,UAA+B,IAAY;QACvC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEM,wCAAQ,GAAf;QACI,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAEM,oCAAI,GAAX;QACI,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAEM,+CAAe,GAAtB,UAAuB,SAA4B;QAC/C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEM,0CAAU,GAAjB;QACI,IAAI,CAAC,YAAY,GAAG;YAChB,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI;YACxC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI;YACpC,GAAG,EAAE,QAAQ;SAChB,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAxID;QADC,KAAK,EAAE;;;2DAGP;IAEQ;QAAR,KAAK,EAAE;kCAAa,OAAO;6DAAS;IApC5B,qBAAqB;QALjC,SAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,i/CAAi/C;YAC3/C,SAAS,EAAE,CAAC,4BAA4B,CAAC;SAC5C,CAAC;;OACW,qBAAqB,CA0KjC;IAAD,4BAAC;CAAA,AA1KD,IA0KC;SA1KY,qBAAqB","sourcesContent":["import { Component, forwardRef, OnInit, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateRangeItemInfo } from './date-range.class';\nimport { helpers } from '../util';\n\nconst allDayTimestamp = 24 * 60 * 60;\n\nconst INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyDateRangeComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'thy-date-range',\n    template: \"<div class=\\\"thy-date-range\\\" [ngClass]=\\\"{'thy-date-range-hidden-menu': hiddenMenu}\\\"> <span href=\\\"javascript:;\\\" class=\\\"btn btn-icon\\\" (click)=\\\"previous()\\\"> <i class=\\\"wtf wtf-angle-left\\\"></i> </span> <span href=\\\"javascript:;\\\" [thyActionMenuToggle]=\\\"dateMenu\\\" class=\\\"thy-date-text\\\" [ngClass]=\\\"{'not-down':!selectedDate}\\\"> <ng-container *ngIf=\\\"selectedDate?.key === 'custom'\\\"> {{selectedDate?.begin | thyDatepickerFormat}} ~ {{selectedDate?.end | thyDatepickerFormat}} </ng-container> <ng-container *ngIf=\\\"selectedDate?.key !== 'custom'\\\">{{selectedDate?.text}}</ng-container> <i *ngIf=\\\"!hiddenMenu\\\" class=\\\"wtf wtf-angle-down thy-date-text-caret-down\\\"></i> </span> <span href=\\\"javascript:;\\\" class=\\\"btn btn-icon\\\" (click)=\\\"next()\\\"> <i class=\\\"wtf wtf-angle-right\\\"></i> </span> </div> <ng-template  #dateMenu > <thy-action-menu *ngIf=\\\"!hiddenMenu\\\"> <a thyActionMenuItem href=\\\"javascript:;\\\" *ngFor=\\\"let dateRange of optionalDateRange\\\" (click)=\\\"selectDateRange(dateRange)\\\"> <span thyActionMenuItemName>{{dateRange?.text}}</span> <span thyActionMenuItemExtendIcon *ngIf=\\\"dateRange.key === selectedDate?.key\\\"> <i class=\\\"wtf wtf-checked\\\"></i> </span> </a> <thy-action-menu-divider></thy-action-menu-divider> <input type=\\\"text\\\" readonly=\\\"readonly\\\" thyDaterangepicker [(ngModel)]=\\\"selectedDateRange\\\" (ngModelChange)=\\\"changeDate()\\\" class=\\\"action-menu-item thy-date-range-menu-item\\\" placeholder=\\\"开始日期~结束日期\\\"  name=\\\"setDate\\\" thyStopPropagation/> </thy-action-menu> </ng-template>\",\n    providers: [INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class ThyDateRangeComponent implements OnInit, ControlValueAccessor {\n\n    private _currentDayTime: any = new Date((new Date()).getFullYear(), (new Date()).getMonth(), (new Date()).getDate());\n\n    public selectedDate?: DateRangeItemInfo;\n\n    public optionalDateRange: DateRangeItemInfo[] = [{\n        key: 'week',\n        text: '本周',\n        begin: helpers.formatDate(this._currentDayTime) - (this._currentDayTime.getDay() - 1) * allDayTimestamp,\n        end: helpers.formatDate(this._currentDayTime) + (7 - this._currentDayTime.getDay()) * allDayTimestamp,\n        timestamp: {\n            interval: 7,\n            unit: 'day'\n        }\n    }, {\n        key: 'month',\n        text: '本月',\n        begin: helpers.formatDate(new Date((new Date()).getFullYear(), (new Date()).getMonth(), 1)),\n        end: helpers.formatDate(new Date((new Date()).getFullYear(), (new Date()).getMonth() + 1, 0)),\n        timestamp: {\n            interval: 1,\n            unit: 'month'\n        }\n    }];\n\n    public selectedDateRange: {\n        begin: { date: number },\n        end: { date: number }\n    };\n\n    @Input()\n    set dateRanges(value: DateRangeItemInfo[]) {\n        this.optionalDateRange = value.length > 0 ? value : this.optionalDateRange;\n    }\n\n    @Input() hiddenMenu: Boolean = false;\n\n    constructor() { }\n\n    public onModelChange: Function = () => {\n\n    }\n\n    public onModelTouched: Function = () => {\n\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            this.selectedDate = value;\n        } else if (this.optionalDateRange.length > 0) {\n            this.selectedDate = this.optionalDateRange[0];\n            this.onModelChange(this.selectedDate);\n        }\n        this._setSelectedDateRange();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onModelTouched = fn;\n    }\n\n    ngOnInit() {\n    }\n\n    private _setSelectedDateRange() {\n        this.selectedDateRange = {\n            begin: { date: this.selectedDate.begin },\n            end: { date: this.selectedDate.end }\n        };\n    }\n\n    private _getNewDate(fullDate: Date, timestamp: { year?: number, month?: number, day?: number } = {}) {\n        const newYear = fullDate.getFullYear() + (timestamp.year || 0);\n        const newMonth = fullDate.getMonth() + (timestamp.month || 0);\n        const newDate = fullDate.getDate() + (timestamp.day || 0);\n\n        return helpers.formatDate(new Date(newYear, newMonth, newDate));\n    }\n\n    private _calculateNewTime(type: string) {\n        if (this.selectedDate.timestamp) {\n            const beginDate = new Date(this.selectedDate.begin * 1000);\n            const endDate = new Date(this.selectedDate.end * 1000);\n            if (this.selectedDate.timestamp.unit === 'day') {\n                if (type === 'previous') {\n                    return {\n                        begin: this._getNewDate(beginDate, { day: -this.selectedDate.timestamp.interval }),\n                        end: this._getNewDate(beginDate, { day: -1 }),\n                        key: 'custom'\n                    };\n                } else {\n                    return {\n                        begin: this._getNewDate(endDate, { day: 1 }),\n                        end: this._getNewDate(endDate, { day: this.selectedDate.timestamp.interval }),\n                        key: 'custom'\n                    };\n                }\n            } else if (this.selectedDate.timestamp.unit === 'month') {\n                if (type === 'previous') {\n                    return {\n                        begin: this._getNewDate(beginDate, { month: -this.selectedDate.timestamp.interval }),\n                        end: this._getNewDate(endDate, { month: -this.selectedDate.timestamp.interval + 1, day: -endDate.getDate() }),\n                        key: 'custom'\n                    };\n                } else {\n                    return {\n                        begin: this._getNewDate(beginDate, { month: this.selectedDate.timestamp.interval }),\n                        end: this._getNewDate(endDate, { month: this.selectedDate.timestamp.interval + 1, day: -endDate.getDate() }),\n                        key: 'custom'\n                    };\n                }\n            } else if (this.selectedDate.timestamp.unit === 'year') {\n                if (type === 'previous') {\n                    return {\n                        begin: this._getNewDate(beginDate, { year: -this.selectedDate.timestamp.interval }),\n                        end: this._getNewDate(endDate, { year: -this.selectedDate.timestamp.interval }),\n                        key: 'custom'\n                    };\n                } else {\n                    return {\n                        begin: this._getNewDate(beginDate, { year: this.selectedDate.timestamp.interval }),\n                        end: this._getNewDate(endDate, { year: this.selectedDate.timestamp.interval }),\n                        key: 'custom'\n                    };\n                }\n            }\n        } else {\n            const interval: number = this.selectedDate.end - this.selectedDate.begin + allDayTimestamp;\n            return {\n                begin: this.selectedDate.begin - interval,\n                end: this.selectedDate.end - interval,\n                key: 'custom'\n            };\n        }\n    }\n\n    private _setPreviousOrNextDate(type: string) {\n        this.selectedDate = Object.assign({}, this.selectedDate, this._calculateNewTime(type));\n        this._setSelectedDateRange();\n        this.onModelChange(this.selectedDate);\n    }\n\n    public previous() {\n        this._setPreviousOrNextDate('previous');\n    }\n\n    public next() {\n        this._setPreviousOrNextDate('next');\n    }\n\n    public selectDateRange(dateRange: DateRangeItemInfo) {\n        this.selectedDate = dateRange;\n        this._setSelectedDateRange();\n        this.onModelChange(this.selectedDate);\n    }\n\n    public changeDate() {\n        this.selectedDate = {\n            begin: this.selectedDateRange.begin.date,\n            end: this.selectedDateRange.end.date,\n            key: 'custom',\n        };\n        this.onModelChange(this.selectedDate);\n    }\n\n}\n"]}
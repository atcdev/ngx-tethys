{"version":3,"file":"alert.component.js","sourceRoot":"","sources":["../../.tmp/alert/alert.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAA+C,MAAM,eAAe,CAAC;AAE9F,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAOlC;IAqCI;QAnCS,YAAO,GAAG,MAAM,CAAC;QAsB1B,qDAAqD;QAE7C,cAAS,GAAuB;YACpC,OAAO,EAAE,sBAAsB;YAC/B,OAAO,EAAE,kBAAkB;YAC3B,MAAM,EAAE,kBAAkB;YAC1B,IAAI,EAAE,UAAU;SACnB,CAAC;QAEM,cAAS,GAAG,IAAI,CAAC;IAIT,CAAC;IA9BjB,sBAAI,sCAAO;aASX;YACI,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrD;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;QACL,CAAC;aAfD,UAAY,KAAuB;YAC/B,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;aAClE;iBAAM;gBACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;QACL,CAAC;;;OAAA;IAyBD,oCAAQ,GAAR;IACA,CAAC;IAtCQ;QAAR,KAAK,EAAE;;sDAAkB;IAEjB;QAAR,KAAK,EAAE;;yDAAoB;IAG5B;QADC,KAAK,EAAE;;;oDAQP;IAdQ,iBAAiB;QAL7B,SAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,sTAAsT;SACnU,CAAC;;OAEW,iBAAiB,CAyC7B;IAAD,wBAAC;CAAA,AAzCD,IAyCC;SAzCY,iBAAiB","sourcesContent":["import { Component, Input, HostBinding, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { inputValueToBoolean } from '../util/helpers';\nimport { helpers } from '../util';\nimport { Dictionary } from '../typings';\n@Component({\n    selector: 'thy-alert',\n    template: \"<!-- <ng-template><ng-content></ng-content></ng-template> --> <div class=\\\"thy-alert thy-alert-{{thyType}}\\\"> <span *ngIf=\\\"thyIcon\\\" class=\\\"wtf mr-2\\\" [ngClass]=\\\"thyIcon\\\"></span> <span *ngIf=\\\"thyMessage\\\">{{thyMessage}}</span> <!-- <ng-container [ngTemplateOutlet]=\\\"content\\\"></ng-container> --> </div>\"\n})\n\nexport class ThyAlertComponent implements OnInit {\n\n    @Input() thyType = 'info';\n\n    @Input() thyMessage: string;\n\n    @Input()\n    set thyIcon(value: boolean | string) {\n        if (value) {\n            this._showIcon = true;\n            this._icon = helpers.isString(value) ? value.toString() : null;\n        } else {\n            this._showIcon = false;\n        }\n    }\n\n    get thyIcon() {\n        if (this._showIcon) {\n            return this._icon || this._typeIcon[this.thyType];\n        } else {\n            return null;\n        }\n    }\n\n    // @ViewChild(TemplateRef) content: TemplateRef<any>;\n\n    private _typeIcon: Dictionary<string> = {\n        success: 'wtf-completed-circle',\n        warning: 'wtf-unselected-o',\n        danger: 'wtf-times-circle',\n        info: 'wtf-task',\n    };\n\n    private _showIcon = true;\n\n    private _icon: string;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n}\n"]}
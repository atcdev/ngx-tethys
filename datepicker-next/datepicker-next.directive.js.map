{"version":3,"file":"datepicker-next.directive.js","sourceRoot":"","sources":["../../.tmp/datepicker-next/datepicker-next.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,UAAU,EAAoB,MAAM,eAAe,CAAC;AAChI,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AACxE,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAwB,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,qBAAqB,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAG3F,IAAM,YAAY,GAAG;IACjB,OAAO,EAAE,YAAY;IACrB,KAAK,EAAE,YAAY;IACnB,IAAI,EAAE,kBAAkB;CAC3B,CAAC;AAYF;IAcI,oCACY,UAAsB,EACtB,QAAmB,EAC3B,iBAAmC,EACnC,GAA2B,EACnB,qBAA4C;QAJ5C,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QAGnB,0BAAqB,GAArB,qBAAqB,CAAuB;QAlBxD,aAAQ,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC;QAE3B,cAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC/B,eAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;QAC/B,iBAAY,GAAmB,cAAc,CAAC,MAAM,CAAC;QACrD,iBAAY,GAAG,IAAI,CAAC;QACpB,gBAAW,GAAG,OAAO,CAAC;QACtB,iBAAY,GAAG,MAAM,CAAC;QACtB,oBAAe,GAAG,IAAI,CAAC;QACvB,gBAAW,GAAG,KAAK,CAAC;QACpB,gBAAW,GAAG,KAAK,CAAC;QACpB,cAAS,GAAW,IAAI,CAAC;IAQ/B,CAAC;mCApBK,0BAA0B;IAsBnC,6CAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE;YAC3D,KAAK,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAkB,GAAlB,cAAsB,CAAC;IAEvB,+CAAU,GAAV,UAAW,KAA8C,IAAG,CAAC;IAE7D,qDAAgB,GAAhB,UAAiB,EAAuB;QACpC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,sDAAiB,GAAjB,UAAkB,EAAa;QAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,yCAAI,GAAJ,cAAQ,CAAC;IAET,yCAAI,GAAJ,cAAQ,CAAC;;IArCA;QAAR,KAAK,EAAE;;oEAAsD;IACrD;QAAR,KAAK,EAAE;;oEAAqB;IACpB;QAAR,KAAK,EAAE;;mEAAuB;IACtB;QAAR,KAAK,EAAE;;oEAAuB;IACtB;QAAR,KAAK,EAAE;;uEAAwB;IACvB;QAAR,KAAK,EAAE;;mEAAqB;IACpB;QAAR,KAAK,EAAE;;mEAAqB;IACpB;QAAR,KAAK,EAAE;;iEAA0B;IAZzB,0BAA0B;QAVtC,SAAS,CAAC;YACP,QAAQ,EAAE,2BAA2B;YACrC,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,iBAAiB;oBAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,4BAA0B,EAA1B,CAA0B,CAAC;oBACzD,KAAK,EAAE,IAAI;iBACd;aACJ;SACJ,CAAC;yCAgB0B,UAAU;YACZ,SAAS;YACR,gBAAgB;YAC9B,sBAAsB;YACI,qBAAqB;OAnB/C,0BAA0B,CA2CtC;IAAD,iCAAC;CAAA,AA3CD,IA2CC;SA3CY,0BAA0B","sourcesContent":["import { Directive, OnInit, ElementRef, Renderer2, ViewContainerRef, Input, forwardRef, AfterContentInit } from '@angular/core';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { DatePipe } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThyPositioningService, PlacementTypes } from '../positioning/positioning.service';\nimport { DatepickerNextValueInfo } from './datepicker-next.interface';\n\nconst FORMAT_RULES = {\n    default: 'yyyy-MM-dd',\n    short: 'yyyy-MM-dd',\n    full: 'yyyy-MM-dd HH:mm'\n};\n\n@Directive({\n    selector: '[thyDatepickerNextAction]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyDatepickerNextDirective),\n            multi: true\n        }\n    ]\n})\nexport class ThyDatepickerNextDirective implements OnInit, AfterContentInit, ControlValueAccessor {\n    dataPipe = new DatePipe('zh-Hans');\n    private _format: string;\n    private _onChange = Function.prototype;\n    private _onTouched = Function.prototype;\n    @Input() thyPlacement: PlacementTypes = PlacementTypes.bottom;\n    @Input() thyAutoAdapt = true;\n    @Input() thyTriggers = 'click';\n    @Input() thyContainer = 'body';\n    @Input() thyOutsideClick = true;\n    @Input() thyDisabled = false;\n    @Input() thyShowTime = false;\n    @Input() thyFormat: string = null;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        _viewContainerRef: ViewContainerRef,\n        cis: ComponentLoaderFactory,\n        private thyPositioningService: ThyPositioningService\n    ) {}\n\n    ngOnInit() {\n        this.renderer.listen(this.elementRef.nativeElement, 'keydown', () => {\n            alert();\n        });\n    }\n\n    ngAfterContentInit() {}\n\n    writeValue(value: DatepickerNextValueInfo | Date | number) {}\n\n    registerOnChange(fn: (value: any) => any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    show() {}\n\n    hide() {}\n}\n"]}
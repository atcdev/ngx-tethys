{"version":3,"file":"daterangepicker.directive.js","sourceRoot":"","sources":["../../.tmp/datepicker/daterangepicker.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Directive, OnInit, ElementRef, Renderer2, ViewContainerRef,\n    Input, ComponentRef, Output, EventEmitter, forwardRef, OnChanges, AfterContentInit\n} from '@angular/core';\nimport { ComponentLoaderFactory, ComponentLoader } from 'ngx-bootstrap/component-loader';\nimport { DatepickerValueEntry, DatepickerValueShowTypesEnum, DatepickerFormatRules } from './i.datepicker';\nimport { ThyDatepickerService } from './datepicker.service';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isObject, isNumber, isDate, inputValueToBoolean } from '../util/helpers';\nimport { daterangepickerUtilIdentificationValueType, daterangepickerUtilConvertToDaterangepickerObject } from './util';\nimport { ThyDaterangepickerContainerComponent } from './daterangepicker-container.component';\nimport { ThyPositioningService } from '../positioning/positioning.service';\nimport { ThyDaterangepickerConfig } from './daterangepicker.config';\n\nconst DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyDaterangepickerDirective),\n    multi: true\n};\n\n@Directive({\n    selector: '[thyDaterangepicker]',\n    providers: [DATEPICKER_VALUE_ACCESSOR]\n})\nexport class ThyDaterangepickerDirective implements OnInit, AfterContentInit, ControlValueAccessor {\n    private _value: DatepickerValueEntry | number | Date | any;\n    private _showFormatRule: string;    // 日期格式化\n    private _onChange = Function.prototype;\n    private _onTouched = Function.prototype;\n    private _isAfterContentInit = false;\n    private _loader: ComponentLoader<ThyDaterangepickerContainerComponent>;\n    private _valueType: DatepickerValueShowTypesEnum;\n    private _isFirstShowInputProperty = true;\n    private store: {\n        originValue?: any,\n        originValueType?: any,\n        // originWithTime?: boolean,\n        value?: any,\n        // withTime?: boolean,\n    } = {};\n    @Input() thyPlacement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n    @Input() thyTriggers = 'click';\n    @Input() thyContainer = 'body';\n    @Input() thyOutsideClick = true;\n    @Input() thyDisabled = false;\n    @Input() thyShowTime = false;\n    @Input() thyFormat: string = null;\n    // @Output() thyOnChange: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2,\n        private _viewContainerRef: ViewContainerRef,\n        private cis: ComponentLoaderFactory,\n        private service: ThyDatepickerService,\n        private thyPositioningService: ThyPositioningService,\n        private _config: ThyDaterangepickerConfig\n    ) {\n        this._loader = cis.createLoader<ThyDaterangepickerContainerComponent>(\n            _elementRef,\n            _viewContainerRef,\n            _renderer\n        );\n    }\n\n    ngOnInit() {\n        this._loader.listen({\n            outsideClick: this.thyOutsideClick,\n            triggers: this.thyTriggers,\n            show: () => this.show(),\n            hide: () => {\n                this.hide();\n            }\n        });\n    }\n\n    ngAfterContentInit() {\n        this._isAfterContentInit = true;\n    }\n\n    writeValue(value: DatepickerValueEntry | Date | number) {\n        if (this._isAfterContentInit) {\n            this.initValueData(value);\n            this._initFormatRule();\n            this._setInputProperty();\n        }\n    }\n\n    registerOnChange(fn: (value: any) => any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    show() {\n        if (this.thyDisabled) {\n            return;\n        }\n\n        this.service.initLocale();\n\n        const dateRangeContainerRef = this._loader.attach(ThyDaterangepickerContainerComponent)\n            .to(this.thyContainer)\n            .show({\n                hideLoader: () => {\n                    this.hide();\n                },\n                initialState: {\n                    store: this.store,\n                    value: this._value,\n                    // withTime: inputValueToBoolean(this.thyShowTime),\n                    changeValue: (result: DatepickerValueEntry) => {\n                        this._initFormatRule();\n                        this._setInputProperty();\n                        this._sendValueToNgModel();\n                    }\n                }\n            });\n\n        this._renderer.addClass(this._elementRef.nativeElement, this._config.openedClass);\n        this.thyPositioningService.setPosition({\n            target: dateRangeContainerRef.location,\n            attach: this._elementRef,\n            placement: this.thyPlacement,\n            offset: 2,\n            appendToBody: true\n        });\n    }\n\n    hide() {\n        this._renderer.removeClass(this._elementRef.nativeElement, this._config.openedClass);\n        this._loader.hide();\n    }\n\n    private initValueData(value: any, isRefreshType?: boolean) {\n        this.store.originValue = value;\n        this.store.originValueType = daterangepickerUtilIdentificationValueType(value);\n        // this.store.originWithTime = value && value.begin && value.begin.with_time;\n        // this.store.withTime = inputValueToBoolean(this.thyShowTime);\n        this.store.value = daterangepickerUtilConvertToDaterangepickerObject(value);\n    }\n\n    private _initFormatRule() {\n        if (this.thyFormat) {\n            this._showFormatRule = this.thyFormat;\n        } else {\n            // if (this.store.withTime) {\n            //     this._showFormatRule = DatepickerFormatRules.full;\n            // } else {\n            //     this._showFormatRule = DatepickerFormatRules.short;\n            // }\n            this._showFormatRule = DatepickerFormatRules.short;\n        }\n    }\n\n    private _setInputProperty() {\n        let initialDate = this.service.dataPipe.transform(this.store.value[0], this._showFormatRule)\n            + ' ~ '\n            + this.service.dataPipe.transform(this.store.value[1], this._showFormatRule);\n\n        if (this.store.value[0] == null || this.store.value[1] == null) {\n            initialDate = '';\n        }\n\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', initialDate);\n    }\n\n    private _formatBeginTime(begin?: Date): number {\n        if (begin) {\n            const beginDate = new Date(begin.getFullYear(), begin.getMonth(), begin.getDate());\n            return Math.floor(beginDate.getTime() / 1000);\n        }\n        return 0;\n    }\n\n    private _formatEndTime(end?: Date): number {\n        if (end) {\n            const endDate = new Date(end.getFullYear(), end.getMonth(), end.getDate(), 23, 59, 59);\n            return Math.floor(endDate.getTime() / 1000);\n        }\n        return 0;\n    }\n\n    private _sendValueToNgModel() {\n        let result;\n        switch (this.store.originValueType) {\n            case DatepickerValueShowTypesEnum.daterangepickerTime:\n                result = {\n                    begin: this._formatBeginTime(this.store.value[0]),\n                    end: this._formatEndTime(this.store.value[1])\n                };\n                break;\n            case DatepickerValueShowTypesEnum.daterangepickerTimeObject:\n                result = {\n                    begin: {\n                        date: this._formatBeginTime(this.store.value[0]),\n                        // with_time: this.store.withTime\n                    },\n                    end: {\n                        date: this._formatEndTime(this.store.value[1]),\n                        // with_time: this.store.withTime\n                    }\n                };\n                break;\n            default:\n                result = {\n                    begin: this._formatBeginTime(this.store.value[0]),\n                    end: this._formatEndTime(this.store.value[1])\n                };\n                break;\n        }\n        this._onChange(result);\n    }\n\n}\n"]}
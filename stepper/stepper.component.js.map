{"version":3,"file":"stepper.component.js","sourceRoot":"","sources":["../../.tmp/stepper/stepper.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    ViewChildren,\n    ContentChildren,\n    QueryList,\n    AfterViewInit,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\nimport { ThyStepComponent, IThyStepperComponent, THY_STEPPER_COMPONENT } from './step.component';\nimport { ThyStepHeaderComponent } from './step-header.component';\n\n@Component({\n    selector: 'thy-stepper',\n    template: \"<div *ngIf=\\\"thyShowStepHeader\\\" class=\\\"thy-stepper-header-container\\\"> <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\"> <thy-step-header [index]=\\\"i\\\" [label]=\\\"step.label\\\" [selected]=\\\"selectedIndex === i\\\" [class.thy-stepper-header-active]=\\\"i <= selectedIndex\\\" [active]=\\\"i <= selectedIndex\\\" > </thy-step-header> <div *ngIf=\\\"!isLast\\\" class=\\\"thy-stepper-line\\\" [class.thy-stepper-line-active]=\\\"i < selectedIndex\\\"></div> </ng-container> </div> <div class=\\\"thy-stepper-content-container\\\"> <ng-container [ngTemplateOutlet]=\\\"selected?.content\\\"></ng-container> </div> \",\n    providers: [\n        {\n            provide: THY_STEPPER_COMPONENT,\n            useExisting: ThyStepperComponent\n        }\n    ]\n})\nexport class ThyStepperComponent implements IThyStepperComponent {\n    @Input()\n    set thySelectedIndex(value: number) {\n        this.selectedIndex = value;\n    }\n\n    @Input()\n    set thySelected(value: ThyStepComponent) {\n        this.selected = value;\n    }\n\n    @Input() thyShowStepHeader = true;\n\n    private _selectedIndex = 0;\n\n    public set selected(step: ThyStepComponent) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n\n    public get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : null;\n    }\n\n    set selectedIndex(index: number) {\n        if (this.steps) {\n            this._updateSelectedItemIndex(index);\n        } else {\n            this._selectedIndex = index;\n        }\n    }\n\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(ThyStepHeaderComponent) stepHeaders: QueryList<ThyStepHeaderComponent>;\n\n    @ContentChildren(ThyStepComponent) steps: QueryList<ThyStepComponent>;\n\n    @HostBinding('class.thy-stepper') thyStepper = true;\n\n    private _updateSelectedItemIndex(newIndex: number): void {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex]\n        });\n        this._selectedIndex = newIndex;\n    }\n\n    to(index: number): void {\n        this.selectedIndex = Math.min(index, this.steps.length - 1);\n    }\n\n    next(): void {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n\n    /** Selects and focuses the previous step in list. */\n    previous(): void {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n}\n"]}
{"version":3,"file":"breadcrumb.component.js","sourceRoot":"","sources":["../../.tmp/breadcrumb/breadcrumb.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACH,SAAS,EACT,uBAAuB,EACvB,WAAW,EACX,KAAK,EACR,MAAM,eAAe,CAAC;AASvB;IAPA;QAQyC,kBAAa,GAAG,IAAI,CAAC;QACpB,YAAO,GAAG,KAAK,CAAC;QACZ,gBAAW,GAAG,KAAK,CAAC;IA8BlE,CAAC;IAzBG,sBAAI,2CAAO;aAAX,UAAY,IAAY;YACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;;;OAAA;IAGD,sBAAI,gDAAY;aAAhB,UAAiB,IAAY;YACzB,IAAI,IAAI,KAAK,OAAO,EAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;YAAA,CAAC;YACF,IAAI,IAAI,KAAK,WAAW,EAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;YAAA,CAAC;QACN,CAAC;;;OAAA;IAEO,6CAAY,GAApB,UAAqB,IAAY;QAC7B,IAAI,IAAI,EAAE;YACN,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;SAC9B;aAAM;YACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;IACL,CAAC;IA/BoC;QAApC,WAAW,CAAC,sBAAsB,CAAC;;iEAAsB;IACpB;QAArC,WAAW,CAAC,uBAAuB,CAAC;;2DAAiB;IACZ;QAAzC,WAAW,CAAC,2BAA2B,CAAC;;+DAAqB;IAK9D;QADC,KAAK,EAAE;;;yDAGP;IAGD;QADC,KAAK,EAAE;;;8DAQP;IApBQ,sBAAsB;QAPlC,SAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EACJ,qHAAqH;YACzH,QAAQ,EAAE,eAAe;YACzB,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAClD,CAAC;OACW,sBAAsB,CAiClC;IAAD,6BAAC;CAAA,AAjCD,IAiCC;SAjCY,sBAAsB","sourcesContent":["import {\n    Component,\n    ChangeDetectionStrategy,\n    HostBinding,\n    Input\n} from '@angular/core';\n\n@Component({\n    selector: 'thy-breadcrumb',\n    template:\n        '<div class=\"thy-breadcrumb-icon\" *ngIf=\"iconClasses\"><i [ngClass]=\"iconClasses\"></i></div><ng-content></ng-content>',\n    exportAs: 'ThyBreadcrumb',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyBreadcrumbComponent {\n    @HostBinding(`class.thy-breadcrumb`) _isBreadcrumb = true;\n    @HostBinding(`class.separator-slash`) isSlash = false;\n    @HostBinding(`class.separator-backslash`) isBackslash = false;\n\n    iconClasses: string[];\n\n    @Input()\n    set thyIcon(icon: string) {\n        this.setIconClass(icon);\n    }\n\n    @Input()\n    set thySeparator(type: string) {\n        if (type === 'slash'){\n            this.isSlash = true;\n        };\n        if (type === 'backslash'){\n            this.isBackslash = true;\n        };\n    }\n\n    private setIconClass(icon: string) {\n        if (icon) {\n            const classes = icon.split(' ');\n            if (classes.length === 1) {\n                classes.unshift('wtf');\n            }\n            this.iconClasses = classes;\n        } else {\n            this.iconClasses = null;\n        }\n    }\n}\n"]}
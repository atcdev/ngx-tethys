{"version":3,"file":"thy-markdown-parser.directive.js","sourceRoot":"","sources":["../../../.tmp/directive/thy-markdown/thy-markdown-parser.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { thyEditorConstant } from '../../editor/editor.constant';\nimport { ThyMarkdownParserService } from './thy-markdown-parser.service';\nimport { $, liteMarked, mermaid, katex } from '../../typings';\n\n@Directive({\n    selector: '[thyMarkdownParser]'\n})\nexport class ThyMarkdownParserDirective implements OnInit {\n    public value: string;\n\n    @Input()\n    set thyMarkdownParser(value: string) {\n        if (value) {\n            this.value = value;\n            this.translateHTML();\n        }\n    }\n\n    private liteMarkedOptions: any = {\n        gfm: true,\n        tables: true,\n        breaks: true,\n        pedantic: false,\n        sanitize: false,\n        smartLists: true,\n        smartypants: true,\n        heading: true,\n        link: true,\n        list: true,\n        wtlink: true,\n        wthexcolor: true,\n        wthexcolorRender: {\n            className: 'msg-inline-color'\n        },\n        wtat: false,\n        wthash: false,\n        wtentity: true,\n        wtentityRender: {\n            className: 'slide-trigger'\n        },\n        wthashRender: {\n            chlPrefix: '/messages/groups/'\n        },\n        wtexclamation: true,\n        wtemoji: false,\n        isParagraphDefault: true,\n        isImageDefault: true,\n        isBlockquoteDefault: true,\n        isHrDefault: true,\n        isStrongDefault: true,\n        isEmDefault: true,\n        isCodespanDefault: true,\n        isCodeDefault: true,\n        isDelDefault: true,\n        isHtmlDefault: true,\n        isTextEscape: true,\n        isDef: true,\n        isImgPreview: true\n    };\n\n    constructor(private elementRef: ElementRef, private thyMarkdownParserService: ThyMarkdownParserService) {}\n\n    initGantt() {\n        if (mermaid) {\n            mermaid.parseError = function(err: any, hash: any) {\n                mermaid.error = err;\n            };\n            mermaid.ganttConfig = {\n                // Configuration for Gantt diagrams\n                numberSectionStyles: 4,\n                axisFormatter: [\n                    [\n                        '%I:%M',\n                        function(d: any) {\n                            // Within a day\n                            return d.getHours();\n                        }\n                    ],\n                    [\n                        'w. %U',\n                        function(d: any) {\n                            // Monday a week\n                            return d.getDay() === 1;\n                        }\n                    ],\n                    [\n                        '%a %d',\n                        function(d: any) {\n                            // Day within a week (not monday)\n                            return d.getDay() && d.getDate() !== 1;\n                        }\n                    ],\n                    [\n                        '%b %d',\n                        function(d: any) {\n                            // within a month\n                            return d.getDate() !== 1;\n                        }\n                    ],\n                    [\n                        '%m-%y',\n                        function(d: any) {\n                            // Month\n                            return d.getMonth();\n                        }\n                    ]\n                ]\n            };\n        }\n    }\n\n    initMarked() {\n        // 设置marked\n        const renderer = new liteMarked.Renderer();\n        renderer.listitem = function(text: string) {\n            if (!/^\\[[ x]\\]\\s/.test(text)) {\n                return liteMarked.Renderer.prototype.listitem(text);\n            }\n            // 任务列表\n            const checkbox = $('<input type=\"checkbox\" disabled/>');\n            if (/^\\[x\\]\\s/.test(text)) {\n                // 完成的任务列表\n                checkbox.attr('checked', true);\n            }\n            return $(liteMarked.Renderer.prototype.listitem(text.substring(3)))\n                .addClass('task-list-item')\n                .prepend(checkbox)[0].outerHTML;\n        };\n        renderer.codespan = function(text: string) {\n            // inline code\n            if (/^\\$.+\\$$/.test(text)) {\n                // inline math\n                const raw = /^\\$(.+)\\$$/.exec(text)[1];\n                const line = raw\n                    .replace(/&lt;/g, '<')\n                    .replace(/&gt;/g, '>')\n                    .replace(/&amp;/g, '&')\n                    .replace(/&quot;/g, '\"')\n                    .replace(/&#39;/g, \"'\"); // unescape html characters\n                try {\n                    return katex.renderToString(line, { displayMode: false });\n                } catch (err) {\n                    return '<code>' + err + '</code>';\n                }\n            }\n            return liteMarked.Renderer.prototype.codespan.apply(this, arguments);\n        };\n        renderer.code = function(code: any, language: any, escaped: any, line_number: any) {\n            code = code.trim();\n            const firstLine = code.split(/\\n/)[0].trim();\n            if (language === 'math') {\n                // 数学公式\n                let tex = '';\n                code.split(/\\n\\n/).forEach(function(line: any) {\n                    // 连续两个换行，则开始下一个公式\n                    line = line.trim();\n                    if (line.length > 0) {\n                        try {\n                            tex += katex.renderToString(line, { displayMode: true });\n                        } catch (err) {\n                            tex += '<pre>' + err + '</pre>';\n                        }\n                    }\n                });\n                return '<div data-line=\"' + line_number + '\">' + tex + '</div>';\n            } else if (\n                firstLine === 'gantt' ||\n                firstLine === 'sequenceDiagram' ||\n                firstLine.match(/^graph (?:TB|BT|RL|LR|TD);?$/)\n            ) {\n                // mermaid\n                if (firstLine === 'sequenceDiagram') {\n                    code += '\\n'; // 如果末尾没有空行，则语法错误\n                }\n                if (mermaid && mermaid.parse(code)) {\n                    return '<div class=\"mermaid\" data-line=\"' + line_number + '\">' + code + '</div>';\n                } else {\n                    if (mermaid && mermaid.error) {\n                        return '<pre data-line=\"' + line_number + '\">' + mermaid.error + '</pre>';\n                    }\n                }\n            } else {\n                return liteMarked.Renderer.prototype.code.apply(this, arguments);\n            }\n        };\n        renderer.html = function(html: string) {\n            const result = liteMarked.Renderer.prototype.html.apply(this, arguments);\n            const h = $(result.bold());\n            return h.html();\n        };\n        renderer.paragraph = function(text: string) {\n            const result = liteMarked.Renderer.prototype.paragraph.apply(this, arguments);\n            const h = $(result.bold());\n            return h.html();\n        };\n        liteMarked.setOptions(this.liteMarkedOptions);\n    }\n    initComponent() {\n        // 初始化甘特图\n        this.initGantt();\n        // 初始解析器\n        this.initMarked();\n    }\n\n    parseMarked(_value: string) {\n        if (liteMarked && _value) {\n            return liteMarked(_value);\n        } else {\n            return _value;\n        }\n    }\n\n    parseMermaid() {\n        if (mermaid) {\n            mermaid.init();\n        }\n    }\n\n    translateHTML() {\n        this.initComponent();\n        let _value = this.thyMarkdownParserService.filterHTML(this.value);\n        _value = this.parseMarked(_value);\n        setTimeout(() => {\n            this.parseMermaid();\n        }, 100);\n        this.elementRef.nativeElement.innerHTML = _value;\n        $(this.elementRef.nativeElement)\n            .find('a')\n            .attr('target', function() {\n                if (this.host !== location.host) {\n                    return '_blank';\n                } else {\n                    let outer_path: any = [\n                        'shared/',\n                        'share/',\n                        'club',\n                        'videos',\n                        'blog',\n                        'plan',\n                        'tour',\n                        'mobile',\n                        'security',\n                        'uservoice',\n                        'customers',\n                        'press',\n                        'help',\n                        'guide',\n                        'feedback',\n                        'about',\n                        'contact',\n                        'privacy',\n                        'terms'\n                    ].join(')|(/');\n                    outer_path = new RegExp('^(/' + outer_path + ')');\n                    if (outer_path.test(this.pathname)) {\n                        return '_blank';\n                    }\n                }\n            });\n    }\n\n    ngOnInit() {\n        const _emojiesSetting: any = this.thyMarkdownParserService.setEmoJies();\n        if (_emojiesSetting) {\n            this.liteMarkedOptions.wtemoji = true;\n            this.liteMarkedOptions.wtemojiRender = _emojiesSetting;\n        }\n        this.translateHTML();\n    }\n}\n"]}
{"version":3,"file":"form.directive.js","sourceRoot":"","sources":["../../.tmp/form/form.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Directive,\n    ElementRef,\n    Input,\n    OnInit,\n    Renderer2,\n    HostBinding,\n    OnDestroy,\n    NgZone\n} from '@angular/core';\nimport { UpdateHostClassService } from '../shared';\nimport { NgForm } from '@angular/forms';\nimport { keycodes } from '../util';\nimport { ThyFormLayout, ThyFormValidatorConfig } from './form.class';\nimport { ThyFormValidatorService } from './form-validator.service';\n\n// 1. submit 按 Enter 键提交, Textare 除外，需要按 Ctrl | Command + Enter 提交\n// 2. alwaysSubmit 不管是哪个元素 按 Enter 键都提交\n// 3. forbidSubmit \bEnter 键禁止提交\n// 默认 submit\nexport enum ThyEnterKeyMode {\n    submit = 'submit',\n    alwaysSubmit = 'alwaysSubmit',\n    forbidSubmit = 'forbidSubmit'\n}\n\n@Directive({\n    selector: '[thyForm],[thy-form]',\n    providers: [UpdateHostClassService, ThyFormValidatorService],\n    exportAs: 'thyForm'\n})\nexport class ThyFormDirective implements OnInit, OnDestroy {\n    private _layout: ThyFormLayout = 'horizontal';\n\n    @Input()\n    set thyLayout(value: ThyFormLayout) {\n        this._layout = value;\n    }\n\n    get thyLayout(): ThyFormLayout {\n        return this._layout;\n    }\n\n    get isHorizontal() {\n        return this._layout === 'horizontal';\n    }\n\n    @Input() thyEnterKeyMode: ThyEnterKeyMode;\n\n    @Input()\n    set thyFormValidatorConfig(config: ThyFormValidatorConfig) {\n        this.validator.setValidatorConfig(config);\n    }\n\n    @HostBinding('class.was-validated') wasValidated = false;\n\n    onSubmitSuccess: ($event: any) => void;\n\n    private _unsubscribe: () => void;\n\n    constructor(\n        private ngForm: NgForm,\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private ngZone: NgZone,\n        private updateHostClassService: UpdateHostClassService,\n        public validator: ThyFormValidatorService\n    ) {\n        this.updateHostClassService.initializeElement(\n            this.elementRef.nativeElement\n        );\n    }\n\n    ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this._unsubscribe = this.renderer.listen(\n                this.elementRef.nativeElement,\n                'keydown',\n                this.onKeydown.bind(this)\n            );\n        });\n        this.updateHostClassService.updateClassByMap({\n            'thy-form': true,\n            [`thy-form-${this.thyLayout}`]: true\n        });\n        this.validator.initialize(this.ngForm, this.elementRef.nativeElement);\n    }\n\n    submit($event: any) {\n        if (this.validator.validate($event)) {\n            this.onSubmitSuccess($event);\n        } else {\n            // this.wasValidated = true;\n        }\n    }\n\n    submitRunInZone($event: any) {\n        this.ngZone.run(() => {\n            this.submit($event);\n        });\n    }\n\n    onKeydown($event: KeyboardEvent) {\n        const currentInput = document.activeElement;\n        const key = $event.which || $event.keyCode;\n        if (key === keycodes.ENTER && currentInput.tagName) {\n            if (\n                !this.thyEnterKeyMode ||\n                this.thyEnterKeyMode === ThyEnterKeyMode.submit\n            ) {\n                // TEXTAREA Ctrl + Enter 或者 Command + Enter 阻止\b默认行为并提交\n                if (currentInput.tagName === 'TEXTAREA') {\n                    if ($event.ctrlKey || $event.metaKey) {\n                        $event.preventDefault();\n                        this.submitRunInZone($event);\n                    }\n                } else {\n                    // 不是 TEXTAREA Enter 阻止\b默认行为并提交\n                    $event.preventDefault();\n                    this.submitRunInZone($event);\n                }\n            } else if (this.thyEnterKeyMode === ThyEnterKeyMode.alwaysSubmit) {\n                $event.preventDefault();\n                this.submitRunInZone($event);\n            } else {\n                // do nothing\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n            this._unsubscribe = null;\n        }\n    }\n}\n"]}
{"version":3,"file":"unique-validator.directive.js","sourceRoot":"","sources":["../../../.tmp/form/validator/unique-validator.directive.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAqD,mBAAmB,EAAE,MAAM,gBAAgB,CAAC;AACxG,OAAO,EAAc,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAEnF,OAAO,EAAE,GAAG,EAAE,UAAU,EAAO,MAAM,gBAAgB,CAAC;AACtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,mBAAmB,CAAC;AAUrD;IAIE,iCACU,UAAsB,EACV,OAAyB;QADrC,eAAU,GAAV,UAAU,CAAY;QACV,YAAO,GAAP,OAAO,CAAkB;IAC3C,CAAC;gCAPM,uBAAuB;IASlC,0CAAQ,GAAR,UACE,IAAqB;QADvB,iBAeC;QAZC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;aACnC,IAAI,CACH,GAAG,CAAC,UAAC,MAAe;YAClB,UAAU,CAAC;gBACT,IAAI,MAAM,IAAI,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,EAAE;oBAChE,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;iBAC5E;YACH,CAAC,CAAC,CAAC;YACH,OAAO,MAAM,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACpD,CAAC,CAAC,EACF,UAAU,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC,CACvB,CAAC;IACN,CAAC;;IAtBQ;QAAR,KAAK,EAAE;;mEAAqD;IAFlD,uBAAuB;QARnC,SAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,yBAAuB,EAAE,KAAK,EAAE,IAAI;iBAChF;aACF;SACF,CAAC;QAOG,WAAA,QAAQ,EAAE,CAAA;yCADS,UAAU;YACD,gBAAgB;OANpC,uBAAuB,CAyBnC;IAAD,8BAAC;CAAA,AAzBD,IAyBC;SAzBY,uBAAuB","sourcesContent":["import { AsyncValidator, AbstractControl, ValidationErrors, NG_ASYNC_VALIDATORS } from '@angular/forms';\nimport { Injectable, Directive, Input, Optional, ElementRef } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { ThyFormDirective } from '../form.directive';\n\n@Directive({\n  selector: '[thyUniqueCheck]',\n  providers: [\n    {\n      provide: NG_ASYNC_VALIDATORS, useExisting: ThyUniqueCheckValidator, multi: true\n    }\n  ]\n})\nexport class ThyUniqueCheckValidator implements AsyncValidator {\n\n  @Input() thyUniqueCheck: (value: any) => Observable<boolean>;\n\n  constructor(\n    private elementRef: ElementRef,\n    @Optional() private thyForm: ThyFormDirective\n  ) { }\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.thyUniqueCheck(ctrl.value)\n      .pipe(\n        map((failed: boolean) => {\n          setTimeout(() => {\n            if (failed && this.thyForm && this.elementRef.nativeElement.name) {\n              this.thyForm.validator.validateControl(this.elementRef.nativeElement.name);\n            }\n          });\n          return failed ? { thyUniqueCheck: failed } : null;\n        }),\n        catchError(() => null)\n      );\n  }\n}\n"]}
{"version":3,"file":"input.component.js","sourceRoot":"","sources":["../../.tmp/input/input.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    HostBinding,\n    Input,\n    Output,\n    ContentChild,\n    TemplateRef,\n    ElementRef,\n    ViewEncapsulation,\n    EventEmitter,\n    forwardRef,\n    ViewChild,\n    OnInit,\n    AfterViewInit,\n    Renderer2\n} from '@angular/core';\nimport { ThyTranslate, UpdateHostClassService } from '../shared';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyInputComponent),\n    multi: true\n};\n\nconst noop = () => {};\n\nconst password = 'password';\n\n@Component({\n    selector: 'thy-input',\n    template: \"<div #prepend class=\\\"input-prepend\\\" *ngIf=\\\"prependTemplate\\\"> <ng-template *ngTemplateOutlet=\\\"prependTemplate\\\"></ng-template> </div> <span class=\\\"input-label input-label-{{thySize}}\\\" [class.active]=\\\"showLabel\\\">{{ thyLabelText }}</span> <input #input thyInput [thySize]=\\\"thySize\\\" [thyAutofocus]=\\\"thyAutofocus\\\" [type]=\\\"type\\\" [placeholder]=\\\"placeholder\\\" [disabled]=\\\"disabled\\\" [(ngModel)]=\\\"value\\\" (ngModelChange)=\\\"onModelChange()\\\" (focus)=\\\"onInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\"> <div #append class=\\\"input-append\\\" *ngIf=\\\"appendTemplate\\\"> <ng-template *ngTemplateOutlet=\\\"appendTemplate\\\"></ng-template> </div> <ng-template #eye> <a href=\\\"javascript:;\\\" class=\\\"link-secondary input-password-icon\\\" (click)=\\\"togglePasswordType()\\\"> <i *ngIf=\\\"isPassword(type)\\\" href=\\\"javascript:;\\\" class=\\\"wtf wtf-pwd-invisible\\\"></i> <i *ngIf=\\\"!isPassword(type)\\\" href=\\\"javascript:;\\\" class=\\\"wtf wtf-pwd-visible\\\"></i> </a> </ng-template> \",\n    providers: [UpdateHostClassService, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputComponent implements ControlValueAccessor, AfterViewInit {\n    @Input() placeholder = '';\n\n    @Input() thySize: string;\n\n    @Input() thyAutofocus = false;\n\n    @Input()\n    set type(value: string) {\n        this._type = value;\n        if (this.isPassword(value)) {\n            this.appendTemplate = this.eyeTemplate;\n        }\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    @Input()\n    set thyType(value: string) {\n        this.type = value;\n    }\n\n    @Input() thyLabelText: string;\n\n    @Input() readonly = false;\n\n    @Output() focus: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @Output() blur: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @ContentChild('append') appendTemplate: TemplateRef<any>;\n\n    @ContentChild('prepend') prependTemplate: TemplateRef<any>;\n\n    @ViewChild('eye') eyeTemplate: TemplateRef<any>;\n\n    public _type = 'text';\n\n    public value: string;\n\n    public disabled = false;\n\n    public showLabel: boolean;\n\n    private onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    @HostBinding('class.thy-input') _isSearchContainer = true;\n\n    @HostBinding('class.form-control') _isFormControl = true;\n\n    @HostBinding('class.form-control-active') _isFocus = false;\n\n    constructor(private renderer: Renderer2) {}\n\n    ngAfterViewInit() {}\n\n    writeValue(value: any): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onModelChange() {\n        this.onChangeCallback(this.value);\n    }\n\n    onInputFocus(event: Event) {\n        this._isFocus = true;\n        this.showLabel = true;\n        this.focus.emit(event);\n    }\n\n    onInputBlur(event: Event) {\n        this._isFocus = false;\n        this.showLabel = false;\n        this.blur.emit(event);\n    }\n\n    isPassword(value: string) {\n        return value === password;\n    }\n\n    togglePasswordType() {\n        this.type = this.isPassword(this.type) ? 'text' : 'password';\n    }\n}\n"]}
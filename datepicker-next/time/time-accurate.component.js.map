{"version":3,"file":"time-accurate.component.js","sourceRoot":"","sources":["../../../.tmp/datepicker-next/time/time-accurate.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, HostBinding, OnDestroy } from '@angular/core';\nimport { getFullTimeText } from '../util';\nimport { ThyDatepickerNextTimeInfo } from '../datepicker-next.interface';\nimport { ThyDatepickerNextStore, datepickerNextActions } from '../datepicker-next.store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\ninterface ThyDatepickerNextTime extends ThyDatepickerNextTimeInfo {\n    text: string;\n    isActive?: boolean;\n}\n\n@Component({\n    selector: 'thy-datepicker-next-time-accurate',\n    template: \"<div class=\\\"time-group\\\"> <div class=\\\"time-cell\\\" *ngFor=\\\"let hour of hours; trackBy:trackByFn\\\" [ngClass]=\\\"{'active': hour.isActive}\\\" (click)=\\\"onSelectHour(hour)\\\"> {{hour.text}} </div> </div> <div class=\\\"time-group\\\"> <div class=\\\"time-cell\\\" *ngFor=\\\"let minute of minutes; trackBy:trackByFn\\\" [ngClass]=\\\"{'active': minute.isActive}\\\" (click)=\\\"onSelectMinute(minute)\\\"> {{minute.text}} </div> </div> \"\n})\n\nexport class ThyDatepickerNextTimeAccurateComponent implements OnInit, OnDestroy {\n\n    @HostBinding('class') stylesClass = 'time-accurate-container';\n\n    hours: ThyDatepickerNextTime[] = [];\n\n    minutes: ThyDatepickerNextTime[] = [];\n\n    time: ThyDatepickerNextTimeInfo = {\n        hour: null,\n        minute: null,\n    };\n\n    private ngUnsubscribe$ = new Subject();\n\n    constructor(\n        private store: ThyDatepickerNextStore,\n    ) { }\n\n    ngOnInit() {\n        this.store.select(ThyDatepickerNextStore.timeSelected)\n            .pipe(takeUntil(this.ngUnsubscribe$))\n            .subscribe(n => {\n                if (this.store.snapshot.timeSelected) {\n                    this.time = {\n                        hour: this.store.snapshot.timeSelected.hour,\n                        minute: this.store.snapshot.timeSelected.minute,\n                    };\n                }\n                this._combinationHours();\n                this._combinationMinutes();\n            });\n    }\n\n    private _combinationHours() {\n        this.hours.length = 0;\n        for (let index = 0; index < 24; index++) {\n            this.hours.push({\n                text: getFullTimeText(index),\n                hour: index,\n                isActive: this.store.snapshot.timeSelected && this.store.snapshot.timeSelected.hour === index,\n            });\n        }\n    }\n\n    private _combinationMinutes() {\n        this.minutes.length = 0;\n        for (let index = 0; index < 60; index++) {\n            this.minutes.push({\n                text: getFullTimeText(index),\n                minute: index,\n                isActive: this.store.snapshot.timeSelected && this.store.snapshot.timeSelected.minute === index,\n            });\n        }\n    }\n\n    onSelectHour(hour: ThyDatepickerNextTime) {\n        this.hours.forEach(n => n.isActive = false);\n        hour.isActive = true;\n        this.time.hour = hour.hour;\n    }\n\n    onSelectMinute(minute: ThyDatepickerNextTime) {\n        this.minutes.forEach(n => n.isActive = false);\n        minute.isActive = true;\n        this.time.minute = minute.minute;\n        this._behaviorTimeDone();\n    }\n\n    private _behaviorTimeDone() {\n        if (this.time.hour !== null && this.time.minute !== null) {\n            this.store.dispatch(datepickerNextActions.changeTimeSelected, {\n                hour: this.time.hour,\n                minute: this.time.minute,\n            });\n        }\n    }\n\n    trackByFn(index: number) {\n        return index;\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n}\n"]}
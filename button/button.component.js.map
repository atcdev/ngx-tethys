{"version":3,"file":"button.component.js","sourceRoot":"","sources":["../../.tmp/button/button.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, Input, ElementRef, Renderer2, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { AfterContentInit, OnChanges, OnInit } from '@angular/core';\nimport { inputValueToBoolean, isUndefined } from '../util/helpers';\nimport { UpdateHostClassService } from '../shared';\n\nexport type ThyButtonType = 'primary' | 'secondary' | 'outline-primary' | 'outline-default' | 'danger' | 'link' | 'link-secondary';\n\nconst btnTypeClassesMap: any = {\n    'primary': ['btn', 'btn-primary'],\n    'secondary': ['btn', 'btn-primary', 'btn-md'],\n    'outline-primary': ['btn', 'btn-outline-primary'],\n    'outline-default': ['btn', 'btn-outline-default'],\n    'danger': ['btn', 'btn-danger'],\n    'link': ['btn', 'btn-link'], // 链接按钮\n    'link-info': ['btn', 'btn-link', 'btn-link-info'],// 幽灵链接按钮\n    'link-secondary': ['btn', 'btn-link', 'btn-link-info'], // 幽灵链接按钮\n    'link-danger-weak': ['btn', 'btn-link', 'btn-link-danger-weak'],// 幽灵危险按钮\n    'link-danger': ['btn', 'btn-link', 'btn-link-danger'], // 危险按钮\n    'link-success': ['btn', 'btn-link', 'btn-link-success'] // 成功按钮\n\n};\n\n@Component({\n    selector: '[thy-button],[thyButton]',\n    template: \"<i [ngClass]=\\\"_iconClass\\\" *ngIf=\\\"_iconClass\\\"></i><ng-content></ng-content>\",\n    providers: [\n        UpdateHostClassService\n    ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyButtonComponent implements OnInit {\n\n    private _nativeElement: any;\n\n    private _initialized = false;\n\n    private _originalText: string;\n\n    private _type: string;\n\n    private _size: string;\n\n    private _icon: string;\n\n    private _loading: boolean;\n\n    private _loadingText: string;\n\n    // 圆角方形\n    _isRadiusSquare = false;\n\n    _iconClass: string[];\n\n    _setBtnType(value: ThyButtonType) {\n        if (value) {\n            if (value.includes('-square')) {\n                this._type = value.replace('-square', '');\n                this._isRadiusSquare = true;\n            } else {\n                this._type = value;\n            }\n\n            if (this._initialized) {\n                this._setClasses();\n            }\n        }\n    }\n\n    @Input()\n    set thyButton(value: ThyButtonType) {\n        this._setBtnType(value);\n    }\n\n    @Input()\n    set thyType(value: ThyButtonType) {\n        this._setBtnType(value);\n    }\n\n    @Input()\n    set thyLoading(value: boolean) {\n        const newLoading = inputValueToBoolean(value);\n        // from false to true\n        if (!this._loading && newLoading) {\n            this._loading = newLoading;\n            this._originalText = this._nativeElement.innerText;\n            this._setLoadingStatus();\n        } else {\n            this._loading = newLoading;\n            this._setLoadingStatus();\n        }\n    }\n\n    @Input()\n    set thyLoadingText(value: string) {\n        if (this._loadingText !== value) {\n            this._loadingText = value;\n            if (this._loading) {\n                this.renderer.setProperty(this._nativeElement, 'innerText', this._loadingText);\n            }\n        }\n    }\n\n    @Input()\n    set thySize(size: string) {\n        this._size = size;\n        if (this._initialized) {\n            this._setClasses();\n        }\n    }\n\n    @Input()\n    set thyIcon(icon: string) {\n        this._icon = icon;\n        if (this._icon) {\n            const classes = this._icon.split(' ');\n            if (classes.length === 1) {\n                classes.unshift('wtf');\n            }\n            this._iconClass = classes;\n        } else {\n            this._iconClass = null;\n        }\n    }\n\n    @Input()\n    set thySquare(value: boolean) {\n        this._isRadiusSquare = inputValueToBoolean(value);\n    }\n\n    private _setLoadingStatus() {\n        // let disabled = false;\n        let innerText: string;\n        if (this._loading) {\n            // disabled = true;\n            innerText = this._loadingText ? this._loadingText : null;\n        } else {\n            // disabled = false;\n            innerText = this._originalText ? this._originalText : null;\n        }\n        // this.renderer.setProperty(this._nativeElement, 'disabled', disabled);\n        this._setClasses();\n        if (innerText) {\n            this.renderer.setProperty(this._nativeElement, 'innerText', innerText);\n        }\n    }\n\n    private _setClasses() {\n        let classNames: string[] = null;\n        if (btnTypeClassesMap[this._type]) {\n            classNames = [...btnTypeClassesMap[this._type]];\n        } else {\n            classNames = ['btn'];\n            if (this._type) {\n                classNames.push(`btn-${this._type}`);\n            }\n            // console.error(`button type (${this._type}) is not support`);\n        }\n        if (this._size) {\n            classNames.push(`btn-${this._size}`);\n        }\n        if (this._icon) {\n            classNames.push('btn-has-icon');\n        }\n        if (this._isRadiusSquare) {\n            classNames.push('btn-square');\n        }\n        if (this._loading) {\n            classNames.push('loading');\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private updateHostClassService: UpdateHostClassService\n    ) {\n        this._nativeElement = this.elementRef.nativeElement;\n        this.updateHostClassService.initializeElement(this._nativeElement);\n    }\n\n    ngOnInit() {\n        this._setClasses();\n        this._initialized = true;\n    }\n}\n"]}
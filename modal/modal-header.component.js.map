{"version":3,"file":"modal-header.component.js","sourceRoot":"","sources":["../../.tmp/modal/modal-header.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAU,MAAM,eAAe,CAAC;AAC1G,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAMlD;IAOI,8BACY,cAA8B,EAC9B,eAAgC;QADhC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAOlC,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;IAN9D,CAAC;IAQL,uCAAQ,GAAR;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,YAAY,WAAW,CAAC;IACpE,CAAC;IAED,yCAAU,GAAV,UAAW,KAAa;QACpB,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B;aAAM;YACH,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;SAChC;IACL,CAAC;IAzBD;QADC,YAAY,CAAC,WAAW,CAAC;kCACH,WAAW;gEAAM;IAS/B;QAAR,KAAK,EAAE;;0DAAkB;IAEjB;QAAR,KAAK,EAAE;;yDAAiB;IAEf;QAAT,MAAM,EAAE;kCAAa,YAAY;4DAAgC;IAhBzD,oBAAoB;QAJhC,SAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,iaAAia;SAC9a,CAAC;yCAS8B,cAAc;YACb,eAAe;OATnC,oBAAoB,CA6BhC;IAAD,2BAAC;CAAA,AA7BD,IA6BC;SA7BY,oBAAoB","sourcesContent":["import { Component, Input, Output, EventEmitter, ContentChild, TemplateRef, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ThyModalService } from './modal.service';\n\n@Component({\n    selector: 'thy-modal-header',\n    template: \"<div class=\\\"modal-header\\\"> <ng-container *ngIf=\\\"!isTemplateRef\\\"> <h3 class=\\\"modal-title\\\"> <i *ngIf=\\\"thyIcon\\\" class=\\\"{{thyIcon}}\\\"></i> {{thyTitle}} </h3> <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal($event)\\\"> <i class=\\\"wtf wtf-times\\\"></i> </button> </ng-container> <ng-container *ngIf=\\\"isTemplateRef\\\"> <template [ngTemplateOutlet]=\\\"headerTemplate\\\"></template> </ng-container> </div> \"\n})\nexport class ModalHeaderComponent implements OnInit {\n\n    @ContentChild(TemplateRef)\n    public headerTemplate: TemplateRef<any>;\n\n    public isTemplateRef: boolean;\n\n    constructor(\n        private bsModalService: BsModalService,\n        private thyModalService: ThyModalService\n    ) { }\n\n    @Input() thyTitle: string;\n\n    @Input() thyIcon: string;\n\n    @Output() thyOnClose: EventEmitter<any> = new EventEmitter<any>();\n\n    ngOnInit() {\n        this.isTemplateRef = this.headerTemplate instanceof TemplateRef;\n    }\n\n    closeModal(event?: Event) {\n        if (this.thyOnClose.observers.length > 0) {\n            this.thyOnClose.emit();\n        } else {\n            this.thyModalService.close();\n        }\n    }\n}\n"]}
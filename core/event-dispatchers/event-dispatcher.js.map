{"version":3,"file":"event-dispatcher.js","sourceRoot":"","sources":["../../../.tmp/core/event-dispatchers/event-dispatcher.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAA0B,MAAM,MAAM,CAAC;AAC9E,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,IAAM,kBAAkB,GAAG,GAAG,CAAC;AAE/B;IA4BI,4BACY,QAAa,EACb,MAAc,EACd,SAAiB;QAFjB,aAAQ,GAAR,QAAQ,CAAK;QACb,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QA9BrB,wBAAmB,GAAiB,IAAI,CAAC;QAEzC,YAAO,GAAG,IAAI,OAAO,EAAS,CAAC;QAE/B,uBAAkB,GAAG,CAAC,CAAC;IA2B5B,CAAC;IAzBI,+CAAkB,GAA1B;QAAA,iBAQC;QAPG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YACrD,OAAO,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACrD,UAAC,KAAY;gBACT,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,kDAAqB,GAA7B;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;YACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACnC;IACL,CAAC;IAED,sBAAI,kDAAkB;aAAtB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;;;OAAA;IAQS,sCAAS,GAAnB,UAAoB,aAA0C;QAA9D,iBAwBC;QAxBmB,8BAAA,EAAA,kCAA0C;QAC1D,OAAO,UAAU,CAAC,MAAM,CAAC,UAAC,QAAgC;YACtD,IAAI,CAAC,KAAI,CAAC,mBAAmB,EAAE;gBAC3B,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;YACD,kEAAkE;YAClE,gEAAgE;YAChE,IAAM,YAAY,GACd,aAAa,GAAG,CAAC;gBACb,CAAC,CAAC,KAAI,CAAC,OAAO;qBACP,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;qBAC9B,SAAS,CAAC,QAAQ,CAAC;gBAC1B,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE3C,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO;gBACH,YAAY,CAAC,WAAW,EAAE,CAAC;gBAC3B,KAAI,CAAC,kBAAkB,EAAE,CAAC;gBAE1B,IAAI,CAAC,KAAI,CAAC,kBAAkB,EAAE;oBAC1B,KAAI,CAAC,qBAAqB,EAAE,CAAC;iBAChC;YACL,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAW,GAAX;QACI,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC;IACL,yBAAC;AAAD,CAAC,AAhED,IAgEC","sourcesContent":["import { NgZone, OnDestroy } from '@angular/core';\nimport { fromEvent, Subject, Observable, Observer, Subscription } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\n\nconst DEFAULT_EVENT_TIME = 100;\n\nexport abstract class ThyEventDispatcher implements OnDestroy {\n    private _globalSubscription: Subscription = null;\n\n    private _event$ = new Subject<Event>();\n\n    private _subscriptionCount = 0;\n\n    private _addGlobalListener() {\n        this._globalSubscription = this.ngZone.runOutsideAngular(() => {\n            return fromEvent(this.document, this.eventName).subscribe(\n                (event: Event) => {\n                    this._event$.next(event);\n                }\n            );\n        });\n    }\n\n    private _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n\n    get globalSubscription(): Subscription {\n        return this._globalSubscription;\n    }\n\n    constructor(\n        private document: any,\n        private ngZone: NgZone,\n        private eventName: string\n    ) {}\n\n    protected subscribe(auditTimeInMs: number = DEFAULT_EVENT_TIME): Observable<Event> {\n        return Observable.create((observer: Observer<Event | void>) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription =\n                auditTimeInMs > 0\n                    ? this._event$\n                          .pipe(auditTime(auditTimeInMs))\n                          .subscribe(observer)\n                    : this._event$.subscribe(observer);\n\n            this._subscriptionCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._subscriptionCount--;\n\n                if (!this._subscriptionCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this._event$.complete();\n    }\n}\n"]}
// Tables

@mixin table-row-variant($state, $background) {
  // Exact selectors below required to override `.table-striped` and prevent
  // inheritance to nested tables.
  .table-#{$state} {
    &,
    > th,
    > td {
      background-color: $background;
    }
  }

  // Hover states for `.table-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .table-hover {
    $hover-background: darken($background, 5%);

    .table-#{$state} {
      @include hover {
        background-color: $hover-background;

        > td,
        > th {
          background-color: $hover-background;
        }
      }
    }
  }
}

 
@mixin table-hover-box-shadow($color){
  @include box-shadow(0px 0px 8px 2px $color);
}

@mixin table-set-padding-space($first-last-space-width: 20px) {
  $table-first-last-padding: 15+$first-last-space-width;
    thead {
      tr {
        th {
          &:first-child {
            padding-left:$table-first-last-padding;
            position: relative;
            &:before {
              @include table-cover-item('', -1px, 0px, '', $white, $first-last-space-width);
            }
          }
          &:last-child {
            padding-right: $table-first-last-padding;
            position: relative;
            &:before {
              @include table-cover-item('', -1px, '', 0px,$white,  $first-last-space-width);
            }
          }
        }
      }
    }
    tbody {
      tr {
        &:first-child {
          td:first-child {
            padding-left: $table-first-last-padding;
            position: relative;
            &:before {
              @include table-cover-item(-1px, '', 0, '', $table-border-color, $first-last-space-width);
              display: none;
            }
          }
          td:last-child {
            padding-right: $table-first-last-padding;
            position: relative;
            &:after {
              @include table-cover-item(-1px, '', '', 0, $table-border-color, $first-last-space-width);
              display: none;
            }
          }
        }
        td {
          &:first-child {
            padding-left: $table-first-last-padding;
            position: relative;
            &:before {
              @include table-cover-item(-1px, '', 0, '', $white, $first-last-space-width);
            }
          }
          &:last-child {
            padding-right: $table-first-last-padding;
            position: relative;
            &:after {
              @include table-cover-item(-1px, '', '', 0, $white, $first-last-space-width);
            }
          }
        }
      }
    }
}

@mixin table-cover-item($top,$bottom,$left,$right,$color: $color-white,$width: 20px) {
  content: '';
  width: $width;
  position: absolute;
  top:$top;
  bottom:$bottom;
  left: $left;
  right:$right;
  background: $color;
  height: 1px;
}

@mixin table-hover-set-space-none(){
  tbody {
    tr {
      &:first-child {
        &.active,
        &:hover {
          td {
            &:first-child,
            &:last-child {
              &:before,
              &:after {
                display: block;
              }
            }
          }
        }
      }
      &:hover,
      &.active {
        td {
          &:first-child,
          &:last-child {
            &:before,
            &:after {
              display: none;
            }
          }
        }
        & + tr {
          td {
            &:first-child {
              &:before {
                display: none;
              }
            }
            &:last-child {
              &:after {
                display: none;
              }
            }
          }
        }
      }
    }
  }
}
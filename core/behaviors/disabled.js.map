{"version":3,"file":"disabled.js","sourceRoot":"","sources":["../../../.tmp/core/behaviors/disabled.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAQzD,oEAAoE;AACpE,MAAM,UAAU,aAAa,CAA4B,IAAO;IAE5D;QAAqB,2BAAI;QAWrB;YAAY,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAA1B,+BAAuC,IAAI,UAAI;YAVvC,kBAAY,GAAG,KAAK,CAAC;;QAUiB,CAAC;QAR/C,sBAAI,gCAAW;iBAAf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;YAC7B,CAAC;iBAED,UAAgB,KAAU;gBACtB,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;YACnD,CAAC;;;WAJA;QAOL,cAAC;IAAD,CAAC,AAZM,CAAc,IAAI,GAYvB;AACN,CAAC","sourcesContent":["import { Constructor } from './constructor';\nimport { inputValueToBoolean } from '../../util/helpers';\n\nexport interface ThyCanDisable {\n    thyDisabled: boolean;\n}\n\nexport type ThyCanDisableCtor = Constructor<ThyCanDisable>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T)\n    : ThyCanDisableCtor & T {\n    return class extends base {\n        private _thyDisabled = false;\n\n        get thyDisabled() {\n            return this._thyDisabled;\n        }\n\n        set thyDisabled(value: any) {\n            this._thyDisabled = inputValueToBoolean(value);\n        }\n\n        constructor(...args: any[]) { super(...args); }\n    };\n}\n\n"]}
{"version":3,"file":"property-operation.component.js","sourceRoot":"","sources":["../../.tmp/property-operation/property-operation.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACH,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAC7D,KAAK,EAAE,MAAM,EAAoB,SAAS,EAAE,YAAY,EAC3D,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AAM1E;IA8DI,uCAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAtD9C,iBAAY,GAAG,KAAK,CAAC;QAErB,eAAU,GAAG,KAAK,CAAC;QAEnB,iBAAY,GAAG,KAAK,CAAC;QAEX,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QAEE,yBAAoB,GAAG,IAAI,CAAC;QAkChE,qBAAgB,GAAG,IAAI,CAAC;IAcjC,CAAC;IAzCD,sBAAI,uDAAY;aAAhB,UAAiB,KAAa;YAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAAA;IAGD,sBAAI,mDAAQ;aAAZ,UAAa,KAAa;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;QACL,CAAC;;;OAAA;IAGD,sBAAI,+DAAoB;aAAxB,UAAyB,KAAa;YAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvD,CAAC;;;OAAA;IAGD,sBAAI,kDAAO;aAAX,UAAY,KAAa;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAAA;IAGD,sBAAI,uDAAY;aAAhB,UAAiB,KAAc;YAC3B,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC;;;OAAA;IAID,uDAAe,GAAf;QACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;aAAM,IAAI,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;YAC9D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;IACL,CAAC;IAMD,0DAAkB,GAAlB;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,8CAAM,GAAN,UAAO,MAAa;QAChB,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IA5DS;QAAT,MAAM,EAAE;;sEAAkC;IAEE;QAA5C,WAAW,CAAC,8BAA8B,CAAC;;+EAA6B;IAE1C;QAA9B,YAAY,CAAC,eAAe,CAAC;kCAAgB,WAAW;wEAAM;IAElC;QAA5B,SAAS,CAAC,gBAAgB,CAAC;kCAAiB,UAAU;yEAAC;IAGxD;QADC,KAAK,EAAE;;;qEAGP;IAGD;QADC,KAAK,EAAE;;;iEAMP;IAGD;QADC,KAAK,EAAE;;;6EAGP;IAGD;QADC,KAAK,EAAE;;;gEAGP;IAGD;QADC,KAAK,EAAE;;;qEAGP;IAEQ;QAAR,KAAK,EAAE;;2EAAyB;IAlDxB,6BAA6B;QAJzC,SAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,QAAQ,EAAE,0qBAA0qB;SACvrB,CAAC;yCA+DoC,YAAY;OA9DrC,6BAA6B,CA2EzC;IAAD,oCAAC;CAAA,AA3ED,IA2EC;SA3EY,6BAA6B","sourcesContent":["import {\n    Component, HostBinding, ContentChild, TemplateRef, ElementRef,\n    Input, Output, AfterContentInit, ViewChild, EventEmitter\n} from '@angular/core';\nimport { ThyTranslate } from '../shared/translate';\nimport { htmlElementIsEmpty, inputValueToBoolean } from '../util/helpers';\n\n@Component({\n    selector: 'thy-property-operation',\n    template: \"<div class=\\\"thy-operation-icon\\\"> <ng-container *ngTemplateOutlet=\\\"operationIcon\\\"></ng-container> <button *ngIf=\\\"_icon\\\" [thyButtonIcon]=\\\"_icon\\\" [thyShape]=\\\"_onlyHasTips ? 'circle-thick-dashed' : 'circle-thick-solid'\\\"></button> </div> <div class=\\\"thy-operation-content\\\" [ngClass]=\\\"{'only-has-tips' : _onlyHasTips}\\\"> <div #contentElement> <ng-content></ng-content> </div> <ng-container *ngIf=\\\"_value\\\">{{_value}}</ng-container> <div class=\\\"thy-tips\\\" *ngIf=\\\"thyLabelHasValue || !thyLabelHasValue && !_value\\\">{{_labelText}}</div> </div> <span *ngIf=\\\"_showClose\\\" (click)=\\\"remove($event)\\\" class=\\\"close-link close-link-danger close-link-sm wtf wtf-times\\\"></span> \"\n})\nexport class ThyPropertyOperationComponent implements AfterContentInit {\n\n    _labelText: string;\n\n    _icon: string;\n\n    _value: string;\n\n    _onlyHasTips = false;\n\n    _showClose = false;\n\n    _initialized = false;\n\n    @Output() thyOnRemove = new EventEmitter();\n\n    @HostBinding('class.thy-property-operation') _isPropertyOperation = true;\n\n    @ContentChild('operationIcon') operationIcon: TemplateRef<any>;\n\n    @ViewChild('contentElement') contentElement: ElementRef;\n\n    @Input()\n    set thyLabelText(value: string) {\n        this._labelText = value;\n    }\n\n    @Input()\n    set thyValue(value: string) {\n        this._value = value;\n        if (this._initialized) {\n            this._setOnlyHasTips();\n        }\n    }\n\n    @Input()\n    set thyLabelTranslateKey(value: string) {\n        this._labelText = this.thyTranslate.instant(value);\n    }\n\n    @Input()\n    set thyIcon(value: string) {\n        this._icon = value;\n    }\n\n    @Input()\n    set thyShowClose(value: boolean) {\n        this._showClose = inputValueToBoolean(value);\n    }\n\n    @Input() thyLabelHasValue = true;\n\n    _setOnlyHasTips() {\n        if (this._value) {\n            this._onlyHasTips = false;\n        } else if (htmlElementIsEmpty(this.contentElement.nativeElement)) {\n            this._onlyHasTips = true;\n        } else {\n            this._onlyHasTips = false;\n        }\n    }\n\n    constructor(private thyTranslate: ThyTranslate) {\n\n    }\n\n    ngAfterContentInit() {\n        this._setOnlyHasTips();\n        this._initialized = true;\n    }\n\n    remove($event: Event) {\n        $event.stopPropagation();\n        this.thyOnRemove.emit($event);\n    }\n}\n"]}
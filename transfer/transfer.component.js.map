{"version":3,"file":"transfer.component.js","sourceRoot":"","sources":["../../.tmp/transfer/transfer.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component, Input, Output, ElementRef, ViewEncapsulation, HostBinding,\n    EventEmitter, ContentChild, TemplateRef, OnInit\n} from '@angular/core';\n\nimport { ThyTransferItem, ThyTransferChangeEvent, ThyTransferSelectEvent, ThyTransferDragEvent } from './transfer.interface';\n\n@Component({\n    selector: 'thy-transfer',\n    template: \"<thy-transfer-list [items]=\\\"leftDataSource\\\" [title]=\\\"leftTitle\\\" [template]=\\\"templateRef\\\" [draggable]=\\\"leftDraggable\\\" (draggableUpdate)=\\\"onDragUpdate($event)\\\" (select)=\\\"onSelect('left' , $event)\\\"></thy-transfer-list> <div class=\\\"thy-transfer-operation\\\"> <div class=\\\"thy-transfer-operation-body\\\"> <a class=\\\"operation-link\\\" href=\\\"javascript:;\\\" (click)=\\\"onMove('right')\\\"> <i class=\\\"wtf wtf-angle-right\\\"></i> </a> <br> <a class=\\\"operation-link rotate-left\\\" href=\\\"javascript:;\\\" (click)=\\\"onMove('left')\\\"> <i class=\\\"wtf wtf-angle-right\\\"></i> </a> </div> </div> <thy-transfer-list [items]=\\\"rightDataSource\\\" [title]=\\\"rightTitle\\\" [template]=\\\"templateRef\\\" [draggable]=\\\"rightDraggable\\\" (draggableUpdate)=\\\"onDragUpdate($event)\\\" (select)=\\\"onSelect('right' , $event)\\\"></thy-transfer-list>\",\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyTransferComponent implements OnInit {\n\n    @HostBinding('class') hostClass = 'thy-transfer';\n\n    public leftDataSource: ThyTransferItem[];\n\n    public rightDataSource: ThyTransferItem[];\n\n    public leftTitle: string;\n\n    public rightTitle: string;\n\n    public leftDraggable = false;\n\n    public rightDraggable = false;\n\n    private _canMove: Function;\n\n    private _autoMove = true;\n\n    @Input()\n    set thyData(value: ThyTransferItem[]) {\n        if (value) {\n            this.initializeTransferData(value);\n        }\n    }\n\n    @Input()\n    set thyTitles(value: string[]) {\n        this.leftTitle = value[0] || '';\n        this.rightTitle = value[1] || '';\n    }\n\n    @Input()\n    set thyAutoMove(value: boolean) {\n        this._autoMove = value;\n    }\n\n    @Input()\n    set thyCanMove(value: Function) {\n        this._canMove = value;\n    }\n\n    @Input()\n    set thyLeftDraggable(value: boolean) {\n        this.leftDraggable = value;\n    }\n\n    @Input()\n    set thyRightDraggable(value: boolean) {\n        this.rightDraggable = value;\n    }\n\n    @Output() thyDraggableUpdate: EventEmitter<ThyTransferDragEvent> = new EventEmitter<ThyTransferDragEvent>();\n\n    @Output() thyChange: EventEmitter<ThyTransferChangeEvent> = new EventEmitter<ThyTransferChangeEvent>();\n\n    @ContentChild('renderTemplate') templateRef: TemplateRef<any>;\n\n    ngOnInit() {\n    }\n\n    initializeTransferData(data: ThyTransferItem[]) {\n        this.leftDataSource = data.filter((item) => {\n            return item.direction === TransferDirection.left;\n        });\n        this.rightDataSource = data.filter((item) => {\n            return item.direction === TransferDirection.right;\n        });\n    }\n\n    onSelect(from: string, event: ThyTransferSelectEvent) {\n        const to = (from === TransferDirection.left) ? TransferDirection.right : TransferDirection.left;\n        event.item.checked = !event.item.checked;\n        if (this._autoMove) {\n            this.onMove(to);\n        }\n    }\n\n\n    onMove(to: string) {\n        const from = (to === TransferDirection.right) ? TransferDirection.left : TransferDirection.right;\n        const leftDataSource = (to === TransferDirection.right) ? this.leftDataSource : this.rightDataSource;\n        const rightDataSource = (to === TransferDirection.right) ? this.rightDataSource : this.leftDataSource;\n        const selections = leftDataSource.filter(item => item.checked);\n        const changeEvent: ThyTransferChangeEvent = {\n            from: from,\n            to: to,\n            items: [...selections]\n        };\n        selections.forEach(item => {\n            const index = leftDataSource.indexOf(item);\n            const removed = leftDataSource.splice(index, 1)[0];\n            removed.checked = !removed.checked;\n            removed.direction = to;\n            rightDataSource.push(removed);\n        });\n        this.thyChange.emit(changeEvent);\n    }\n\n    onDragUpdate(event: ThyTransferDragEvent) {\n        this.thyDraggableUpdate.emit(event);\n    }\n}\n\nexport enum TransferDirection {\n    left = 'left',\n    right = 'right'\n}\n"]}
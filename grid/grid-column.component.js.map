{"version":3,"file":"grid-column.component.js","sourceRoot":"","sources":["../../.tmp/grid/grid-column.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Input,\n    ElementRef,\n    ViewEncapsulation,\n    ContentChild,\n    ContentChildren,\n    TemplateRef,\n    ViewChild,\n    InjectionToken,\n    Optional,\n    Inject\n} from '@angular/core';\nimport {\n    AfterContentInit,\n    OnInit,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { inputValueToBoolean, isUndefined } from '../util/helpers';\nimport { ThyGridComponent } from './grid.component';\nimport { ThyGridColumn } from './grid.interface';\n\nexport interface IThyGridColumnParentComponent {\n    updateColumnSelections(key: string, selections: any): void;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const THY_GRID_COLUMN_PARENT_COMPONENT = new InjectionToken<\n    IThyGridColumnParentComponent\n>('THY_GRID_COLUMN_PARENT_COMPONENT');\n\n@Component({\n    selector: 'thy-grid-column',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyGridColumnComponent implements OnInit {\n    @Input() thyModelKey = '';\n\n    @Input() thyTitle = '';\n\n    @Input() thyType = '';\n\n    @Input() thyWidth: string | number = '';\n\n    @Input() thyClassName = '';\n\n    @Input() thyHeaderClassName = '';\n\n    @Input() thyDisabled = false;\n\n    @Input()\n    set thySelections(value: any) {\n        if (value) {\n            if (Array.isArray(value)) {\n                this.selections = value;\n            } else {\n                this.selections = [value];\n            }\n            if (!this._firstChange) {\n                this.parent.updateColumnSelections(this.key, this.selections);\n            }\n        }\n    }\n\n    @Input() thyDefaultText = '';\n\n    @ContentChild('header') headerTemplateRef: TemplateRef<any>;\n\n    @ContentChild('cell') cellTemplateRef: TemplateRef<any>;\n\n    @ContentChild(TemplateRef)\n    set templateRef(value: TemplateRef<any>) {\n        if (value) {\n            if (!this.headerTemplateRef && !this.cellTemplateRef) {\n                this.cellTemplateRef = value;\n            }\n        }\n    }\n\n    public key?: string;\n\n    public model: string;\n\n    public title: string;\n\n    public type: string;\n\n    public selections: any = [];\n\n    public width: string | number;\n\n    public className: string;\n\n    public headerClassName: string;\n\n    public disabled: boolean;\n\n    public defaultText: string;\n\n    private _firstChange = true;\n\n    constructor(\n        private el: ElementRef,\n        @Optional()\n        @Inject(THY_GRID_COLUMN_PARENT_COMPONENT)\n        public parent: IThyGridColumnParentComponent\n    ) {}\n\n    ngOnInit() {\n        this.key = this._generateKey();\n        this.model = this.thyModelKey;\n        this.title = this.thyTitle;\n        this.type = this.thyType;\n        this.width = this.thyWidth;\n        this.className = this.thyClassName;\n        this.headerClassName = this.thyHeaderClassName;\n        this.disabled = this.thyDisabled;\n        this.defaultText = this.thyDefaultText;\n        this._firstChange = false;\n    }\n\n    private _generateKey() {\n        return (\n            '[$$column]' +\n            Math.random()\n                .toString(16)\n                .substr(2, 8)\n        );\n    }\n}\n"]}
{"version":3,"file":"radio.component.js","sourceRoot":"","sources":["../../.tmp/radio/radio.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACH,SAAS,EACT,UAAU,EAIV,KAAK,EAEL,QAAQ,EACR,uBAAuB,EACvB,iBAAiB,EACpB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,iBAAiB,EAAwB,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,yBAAyB,EAAE,MAAM,WAAW,CAAC;AACtD,OAAO,EAAE,sBAAsB,EAAE,MAAM,+BAA+B,CAAC;AACvE,OAAO,EAAE,mBAAmB,EAAE,MAAM,iBAAiB,CAAC;AActD;IAAuC,qCAAyB;IAU5D,2BACW,YAA0B,EACd,sBAA8C,EACjE,iBAAoC;QAHxC,YAKI,kBAAM,YAAY,EAAE,iBAAiB,CAAC,SACzC;QALU,kBAAY,GAAZ,YAAY,CAAc;QACd,4BAAsB,GAAtB,sBAAsB,CAAwB;;IAIrE,CAAC;0BAhBQ,iBAAiB;IAK1B,sBAAI,yCAAU;aAAd,UAAe,KAAc;YACzB,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAC1C,CAAC;;;OAAA;IAUD,oCAAQ,GAAR;QACI,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC7B,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC9C;IACL,CAAC;IAED,kCAAM,GAAN;QACI,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC7B,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAChE;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACvC;IACL,CAAC;;IA3BQ;QAAR,KAAK,EAAE;;uDAAkB;IAHjB,iBAAiB;QAZ7B,SAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,QAAQ,EAAE,kOAAkO;YAC5O,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,iBAAiB;oBAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,mBAAiB,EAAjB,CAAiB,CAAC;oBAChD,KAAK,EAAE,IAAI;iBACd;aACJ;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAClD,CAAC;QAaO,WAAA,QAAQ,EAAE,CAAA;yCADU,YAAY;YACU,sBAAsB;YAC9C,iBAAiB;OAb/B,iBAAiB,CA+B7B;IAAD,wBAAC;CAAA,AA/BD,CAAuC,yBAAyB,GA+B/D;SA/BY,iBAAiB","sourcesContent":["import {\n    Component,\n    forwardRef,\n    OnInit,\n    HostBinding,\n    HostListener,\n    Input,\n    ElementRef,\n    Optional,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ThyTranslate } from '../shared';\nimport { ThyFormCheckBaseComponent } from '../shared';\nimport { ThyRadioGroupComponent } from './group/radio-group.component';\nimport { inputValueToBoolean } from '../util/helpers';\n\n@Component({\n    selector: '[thy-radio],[thyRadio]',\n    template: \"<input class=\\\"form-check-input\\\" [checked]=\\\"_isChecked\\\" (change)=\\\"change()\\\" type=\\\"radio\\\" [disabled]=\\\"_disabled\\\" [attr.name]=\\\"name\\\"> <span class=\\\"form-check-label\\\">{{_labelText}}</span> <ng-content></ng-content> \",\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyRadioComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyRadioComponent extends ThyFormCheckBaseComponent implements OnInit {\n    name: string;\n\n    @Input() thyValue: string;\n\n    set thyChecked(value: boolean) {\n        this.writeValue(inputValueToBoolean(value));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    constructor(\n        public thyTranslate: ThyTranslate,\n        @Optional() public thyRadioGroupComponent: ThyRadioGroupComponent,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(thyTranslate, changeDetectorRef);\n    }\n\n    ngOnInit() {\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.addRadio(this);\n        }\n    }\n\n    change() {\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.updateValue(this.thyValue, true);\n        } else {\n            this.updateValue(!this._innerValue);\n        }\n    }\n}\n"]}
{"version":3,"file":"option-group.component.js","sourceRoot":"","sources":["../../.tmp/select/option-group.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    HostBinding,\n    Input,\n    OnInit,\n    ContentChildren,\n    QueryList,\n    NgZone,\n    OnDestroy,\n    AfterContentInit\n} from '@angular/core';\nimport { Observable, defer, Subject, merge, combineLatest } from 'rxjs';\nimport { OptionVisiableChange, ThyOptionComponent } from './option.component';\nimport { take, switchMap, startWith, takeUntil, reduce, debounceTime, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'thy-option-group',\n    template: \"<span class=\\\"group-name text-info\\\">{{ thyGroupLabel }}</span> <ng-content></ng-content> \"\n})\nexport class ThySelectOptionGroupComponent implements OnDestroy, AfterContentInit {\n    _hidden = false;\n    @Input()\n    @HostBinding(`class.disabled`)\n    thyDisabled: boolean;\n\n    @HostBinding('class.thy-option-item-group') _isOptionGroup = true;\n\n    @HostBinding('class.thy-select-option-group-hidden')\n    get hidden(): boolean {\n        return this._hidden;\n    }\n\n    @Input() thyGroupLabel: string;\n\n    @ContentChildren(ThyOptionComponent) options: QueryList<ThyOptionComponent>;\n\n    _destroy$: Subject<any> = new Subject<any>();\n\n    optionVisiableChanges: Observable<OptionVisiableChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map(option => option.visiableChange));\n        }\n        return this._ngZone.onStable.asObservable().pipe(\n            take(1),\n            switchMap(() => this.optionVisiableChanges)\n        );\n    }) as Observable<OptionVisiableChange>;\n\n    constructor(private _ngZone: NgZone) {}\n\n    ngAfterContentInit() {\n        this.options.changes\n            .pipe(\n                startWith(null),\n                takeUntil(this._destroy$)\n            )\n            .subscribe(() => {\n                this._resetOptions();\n            });\n    }\n\n    _resetOptions() {\n        const changedOrDestroyed$ = merge(this.options.changes, this._destroy$);\n        merge(...this.options.map(option => option.visiableChange))\n            .pipe(\n                takeUntil(changedOrDestroyed$),\n                debounceTime(10),\n                map((data: OptionVisiableChange) => {\n                    const hasOption = this.options.find(option => {\n                        if (!option.hidden) {\n                            return true;\n                        }\n                    });\n                    if (hasOption) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                })\n            )\n            .subscribe((data: boolean) => {\n                this._hidden = data;\n            });\n    }\n\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n}\n"]}
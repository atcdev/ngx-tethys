{"version":3,"file":"confirm.component.js","sourceRoot":"","sources":["../../../.tmp/dialog/confirm/confirm.component.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EACH,SAAS,EAGT,uBAAuB,EACvB,iBAAiB,EAEjB,MAAM,EACT,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAC7C,OAAO,EAAoB,2BAA2B,EAAE,MAAM,mBAAmB,CAAC;AAClF,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAO1C;IAiBI,6BACY,SAA4C,EAC5C,iBAAoC,EACC,aAA+B;QAFpE,cAAS,GAAT,SAAS,CAAmC;QAC5C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACC,kBAAa,GAAb,aAAa,CAAkB;IAC7E,CAAC;IAEJ,sCAAQ,GAAR;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAC3E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC;YAC/D,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;SAClF;IACL,CAAC;IAED,qCAAO,GAAP;QAAA,iBAmBC;QAlBG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACnC,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;YAC5B,MAAM;iBACD,IAAI,CACD,QAAQ,CAAC;gBACL,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;YAC1C,CAAC,CAAC,CACL;iBACA,SAAS,CAAC,UAAA,OAAO;gBACd,IAAI,OAAO,EAAE;oBACT,KAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;YACL,CAAC,CAAC,CAAC;SACV;aAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;IACL,CAAC;IAED,mCAAK,GAAL;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,yCAAW,GAAX,cAAe,CAAC;IA5DP,mBAAmB;QAL/B,SAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,opBAAopB;YAC9pB,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAClD,CAAC;QAqBO,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;yCAFjB,YAAY;YACJ,iBAAiB;OAnBvC,mBAAmB,CA6D/B;IAAD,0BAAC;CAAA,AA7DD,IA6DC;SA7DY,mBAAmB","sourcesContent":["import {\n    Component,\n    OnInit,\n    OnDestroy,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    NgZone,\n    Inject\n} from '@angular/core';\nimport { ThyDialogRef } from '../dialog-ref';\nimport { ThyConfirmConfig, THY_CONFIRM_DEFAULT_OPTIONS } from '../confirm.config';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n    selector: 'thy-confirm-default',\n    template: \"<thy-dialog-header thyTitle=\\\"Install Angular\\\"> <ng-template #dialogHeader> <h3 class=\\\"dialog-title\\\">{{ title }}</h3> <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\"> <i class=\\\"wtf wtf-times\\\"></i> </button> </ng-template> </thy-dialog-header> <thy-dialog-body class=\\\"thy-form\\\"> <div class=\\\"form-group\\\"> <p [innerHTML]=\\\"content\\\"></p> </div> <div class=\\\"form-group\\\"> <div class=\\\"btn-pair\\\"> <button [thyButton]=\\\"okType\\\" (click)=\\\"confirm()\\\" [thyLoading]=\\\"loading\\\" [thyLoadingText]=\\\"okLoadingText\\\"> чбошод </button> <button thyButton=\\\"link-secondary\\\" (click)=\\\"close()\\\">{{ cancelText }}</button> </div> </div> </thy-dialog-body> \",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyConfirmComponent implements OnInit, OnDestroy {\n    loading: boolean;\n\n    options: ThyConfirmConfig;\n\n    public title: string;\n\n    public content: string;\n\n    public okText: string;\n\n    public okType: string;\n\n    public cancelText: string;\n\n    public okLoadingText: string;\n\n    constructor(\n        private dialogRef: ThyDialogRef<ThyConfirmComponent>,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Inject(THY_CONFIRM_DEFAULT_OPTIONS) private defaultConfig: ThyConfirmConfig\n    ) {}\n\n    ngOnInit() {\n        if (this.options) {\n            this.title = this.options.title || this.defaultConfig.title;\n            this.content = this.options.content;\n            this.okText = this.options.okText || this.defaultConfig.okText;\n            this.okType = this.options.okType || this.defaultConfig.okType;\n            this.cancelText = this.options.cancelText || this.defaultConfig.cancelText;\n            this.okLoadingText = this.options.okLoadingText || this.okText;\n            this.options.okLoadingText = this.options.okLoadingText || this.options.okText;\n        }\n    }\n\n    confirm() {\n        this.loading = true;\n        const result = this.options.onOk();\n        if (result && result.subscribe) {\n            result\n                .pipe(\n                    finalize(() => {\n                        this.loading = false;\n                        this.changeDetectorRef.markForCheck();\n                    })\n                )\n                .subscribe(success => {\n                    if (success) {\n                        this.close();\n                    }\n                });\n        } else {\n            this.close();\n        }\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n    ngOnDestroy() {}\n}\n"]}
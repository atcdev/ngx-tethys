import { OnInit, TemplateRef, ElementRef, NgZone, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ThyTreeSelectNode } from './tree-select.class';
import { Observable } from 'rxjs';
import { CdkOverlayOrigin, ScrollStrategy, Overlay, ScrollDispatcher, CdkConnectedOverlay, ConnectionPositionPair } from '@angular/cdk/overlay';
export declare function MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay): ScrollStrategy;
declare type InputSize = 'xs' | 'sm' | 'md' | 'lg' | '';
export declare class ThyTreeSelectComponent implements OnInit, ControlValueAccessor {
    elementRef: ElementRef;
    renderer: Renderer2;
    private ngZone;
    private overlay;
    private scrollDispatcher;
    treeSelectClass: boolean;
    isTreeSelect: boolean;
    expandTreeSelectOptions: boolean;
    isMulti: boolean;
    treeNodes: ThyTreeSelectNode[];
    selectedValue: any;
    selectedNode: ThyTreeSelectNode;
    selectedNodes: ThyTreeSelectNode[];
    flattenTreeNodes: ThyTreeSelectNode[];
    cdkConnectOverlayWidth: number;
    positions: ConnectionPositionPair[];
    private isInit;
    valueIsObject: boolean;
    private parentNodes;
    private cdkScrollables;
    thyTreeSelectTriggerDisplayRef: TemplateRef<any>;
    cdkOverlayOrigin: CdkOverlayOrigin;
    cdkConnectedOverlay: CdkConnectedOverlay;
    thyTreeNodes: ThyTreeSelectNode[];
    thyPrimaryKey: string;
    thyShowKey: string;
    thyChildCountKey: string;
    thyAllowClear: boolean;
    thyMultiple: boolean;
    thyDisable: boolean;
    thyPlaceholder: string;
    thySize: InputSize;
    thyEmptyOptionsText: string;
    thyHiddenNodeKey: string;
    thyDisableNodeKey: string;
    thyAsyncNode: boolean;
    thyShowWholeName: boolean;
    thyHiddenNodeFn: (node: ThyTreeSelectNode) => boolean;
    thyDisableNodeFn: (node: ThyTreeSelectNode) => boolean;
    thyGetNodeChildren: (node: ThyTreeSelectNode) => Observable<ThyTreeSelectNode>;
    onModelChange: Function;
    onModelTouch: Function;
    private _getNgModelType;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    constructor(elementRef: ElementRef, renderer: Renderer2, ngZone: NgZone, overlay: Overlay, scrollDispatcher: ScrollDispatcher);
    onDocumentClick(event: Event): void;
    ngOnInit(): void;
    private init;
    private registerInScrollDispatcher;
    private deregisterInScrollDispatcher;
    private flattenNodes;
    private _findTreeNode;
    getShowNodeName(): any;
    private _dataLoadingDoneFn;
    openSelectPop(): void;
    close(): void;
    clearSelectedValue(event: Event): void;
    private _changeSelectValue;
    removeSelectedNode(node: ThyTreeSelectNode, event?: Event): void;
    selectNode(node: ThyTreeSelectNode): void;
    getNodeChildren(node: ThyTreeSelectNode): void;
}
export {};

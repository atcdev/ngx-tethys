{"version":3,"file":"pagination-jump.component.js","sourceRoot":"","sources":["../../.tmp/pagination/pagination-jump.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACH,SAAS,EACT,KAAK,EACL,WAAW,EACX,MAAM,EACN,YAAY,EACf,MAAM,eAAe,CAAC;AAMvB;IAOI;QAJU,SAAI,GAAyB,IAAI,YAAY,EAAU,CAAC;QAExB,oBAAe,GAAG,IAAI,CAAC;IAElD,CAAC;mCAPP,0BAA0B;IAS5B,yCAAc,GAArB,UAAsB,IAAY,EAAE,GAAW;QAC3C,IAAI,IAAI,IAAI,CAAC,EAAE;YACX,OAAO,CAAC,CAAC;SACZ;QACD,IAAI,IAAI,IAAI,GAAG,EAAE;YACb,OAAO,GAAG,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,iDAAY,GAAZ,UAAa,SAAiB;QAC1B,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,EAAE;YAC1B,OAAO;SACV;QACD,IAAM,IAAI,GAAW,4BAA0B,CAAC,cAAc,CAC1D,CAAC,SAAS,EACV,IAAI,CAAC,GAAG,CACX,CAAC;QACF,IAAM,GAAG,GAAW,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;IACpC,CAAC;;IA7BQ;QAAR,KAAK,EAAE;;4DAAc;IACb;QAAR,KAAK,EAAE;;2DAAa;IACX;QAAT,MAAM,EAAE;kCAAO,YAAY;4DAAsC;IACzD;QAAR,KAAK,EAAE;;gEAAmB;IACe;QAAzC,WAAW,CAAC,2BAA2B,CAAC;;uEAAwB;IALxD,0BAA0B;QAJtC,SAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,2SAA2S;SACxT,CAAC;;OACW,0BAA0B,CA+BtC;IAAD,iCAAC;CAAA,AA/BD,IA+BC;SA/BY,0BAA0B","sourcesContent":["import {\n    Component,\n    Input,\n    HostBinding,\n    Output,\n    EventEmitter\n} from '@angular/core';\n\n@Component({\n    selector: 'thy-pagination-jump',\n    template: \"<span>到</span> <input type=\\\"number\\\" #input autocomplete=\\\"off\\\" rows=\\\"2\\\" [min]=\\\"1\\\" [max]=\\\"max\\\" [ngModel]=\\\"page\\\" (keyup.enter)=\\\"changeHandle(input.value)\\\" [disabled]=\\\"disabled\\\" /> <span>页</span> <button (click)=\\\"changeHandle(input.value)\\\" class=\\\"thy-pagination-btn\\\"> 确定 </button> \"\n})\nexport class ThyPaginationJumpComponent {\n    @Input() page: number;\n    @Input() max: number;\n    @Output() jump: EventEmitter<number> = new EventEmitter<number>();\n    @Input() disabled: boolean;\n    @HostBinding('class.thy-pagination-jump') _paginationJump = true;\n\n    constructor() {}\n\n    static nextPageNumber(page: number, max: number): number {\n        if (page <= 1) {\n            return 1;\n        }\n        if (page >= max) {\n            return max;\n        }\n        return page;\n    }\n\n    changeHandle(jumpValue: number): void {\n        if (Number.isNaN(+jumpValue)) {\n            return;\n        }\n        const next: number = ThyPaginationJumpComponent.nextPageNumber(\n            +jumpValue,\n            this.max\n        );\n        const pre: number = this.page;\n        this.page = Math.round(next);\n        this.jump.emit(this.page - pre);\n    }\n}\n"]}
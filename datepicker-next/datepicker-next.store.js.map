{"version":3,"file":"datepicker-next.store.js","sourceRoot":"","sources":["../../.tmp/datepicker-next/datepicker-next.store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Store, Action } from '../store';\nimport {\n    DatepickerNextCalendarViewModeEnum,\n    ThyDatepickerNextCalendarDate,\n    DatepickerNextValueChangeTypeEnum,\n    ThyDatepickerNextTimeInfo,\n    DatepickerNextViewFeatureConfig,\n    DatepickerNextDisableRules\n} from './datepicker-next.interface';\nimport { calendarDateConvert } from './util';\n\nexport class DatepickerNextState {\n    viewFeatureConfig: DatepickerNextViewFeatureConfig;\n    calendarViewMode: DatepickerNextCalendarViewModeEnum;\n    calendarViewModeComponent: any;\n    calendarNavigation: {\n        text: string;\n    };\n    calendarCurrent: ThyDatepickerNextCalendarDate;\n    calendarSelected: ThyDatepickerNextCalendarDate;\n    timeSelected: ThyDatepickerNextTimeInfo;\n    valueChange: any;\n    disableRules: DatepickerNextDisableRules;\n}\n\nexport const datepickerNextActions = {\n    initState: 'initState',\n    changeViewFeatureConfig: 'changeViewFeatureConfig',\n    changeCalendarViewMode: 'changeCalendarViewMode',\n    changeCalendarCurrent: 'changeCalendarCurrent',\n    changeCalendarSelected: 'changeCalendarSelected',\n    changeTimeSelected: 'changeTimeSelected',\n    valueChange: 'valueChange',\n    setDisableRules: 'setDisableRules'\n};\n\nexport class ThyDatepickerNextStore extends Store<DatepickerNextState> {\n    static calendarViewMode(state: DatepickerNextState) {\n        return state.calendarViewMode;\n    }\n\n    static calendarCurrent(state: DatepickerNextState) {\n        return state.calendarCurrent;\n    }\n\n    static calendarSelected(state: DatepickerNextState) {\n        return state.calendarSelected;\n    }\n\n    static timeSelected(state: DatepickerNextState) {\n        return state.timeSelected;\n    }\n\n    static calendarCurrentYear(state: DatepickerNextState) {\n        return state.calendarCurrent.year;\n    }\n\n    static valueChange(state: DatepickerNextState) {\n        return state.valueChange;\n    }\n\n    static disableRules(state: DatepickerNextState) {\n        return state.disableRules;\n    }\n\n    constructor() {\n        super(new DatepickerNextState());\n    }\n\n    clear() {\n        this.next(new DatepickerNextState());\n    }\n\n    @Action(datepickerNextActions.initState)\n    initState(\n        state: DatepickerNextState,\n        payload: {\n            calendarDate: ThyDatepickerNextCalendarDate;\n            calendarTime: ThyDatepickerNextTimeInfo;\n        }\n    ): void {\n        // calendarDate\n        let year, month, day;\n        if (payload && payload.calendarDate) {\n            year = payload.calendarDate.year;\n            month = payload.calendarDate.month;\n            day = payload.calendarDate.day;\n            this.dispatch(datepickerNextActions.changeCalendarSelected, {\n                year,\n                month,\n                day\n            });\n        } else {\n            const today = new Date();\n            year = today.getFullYear();\n            month = today.getMonth();\n            day = today.getDate();\n        }\n        this.dispatch(datepickerNextActions.changeCalendarCurrent, {\n            year,\n            month,\n            day: 1,\n            viewMode: DatepickerNextCalendarViewModeEnum.day\n        });\n\n        // calendarTime\n        let hour, minute;\n        if (payload && payload.calendarTime) {\n            hour = payload.calendarTime.hour;\n            minute = payload.calendarTime.minute;\n            this.dispatch(datepickerNextActions.changeTimeSelected, {\n                hour,\n                minute\n            });\n        }\n    }\n\n    @Action(datepickerNextActions.changeViewFeatureConfig)\n    changeViewFeatureConfig(\n        state: DatepickerNextState,\n        payload: DatepickerNextViewFeatureConfig\n    ): void {\n        if (!state.viewFeatureConfig) {\n            state.viewFeatureConfig = {};\n        }\n        for (const key in payload) {\n            if (payload.hasOwnProperty(key)) {\n                state.viewFeatureConfig[key] = payload[key];\n            }\n        }\n        this.next(state);\n    }\n\n    @Action(datepickerNextActions.changeCalendarSelected)\n    changeCalendarSelected(\n        state: DatepickerNextState,\n        payload: ThyDatepickerNextCalendarDate\n    ): void {\n        const result = state.calendarSelected || {};\n        if (payload.year !== undefined) {\n            result.year = payload.year;\n        }\n        if (payload.month !== undefined) {\n            result.month = payload.month;\n        }\n        if (payload.day !== undefined) {\n            result.day = payload.day;\n        }\n        state.calendarSelected = calendarDateConvert(\n            result.year,\n            result.month,\n            result.day\n        );\n        this.next(state);\n    }\n\n    @Action(datepickerNextActions.changeCalendarViewMode)\n    changeCalendarViewMode(\n        state: DatepickerNextState,\n        payload: { viewMode: DatepickerNextCalendarViewModeEnum }\n    ): void {\n        state.calendarViewMode = payload.viewMode;\n        this.next(state);\n    }\n\n    @Action(datepickerNextActions.changeCalendarCurrent)\n    changeCalendarCurrent(\n        state: DatepickerNextState,\n        payload: {\n            year: number;\n            month: number;\n            day: number;\n            viewMode: DatepickerNextCalendarViewModeEnum;\n        }\n    ): void {\n        if (state.calendarCurrent) {\n            if (payload.year !== undefined) {\n                state.calendarCurrent.year = payload.year;\n            }\n            if (payload.month !== undefined) {\n                const date = calendarDateConvert(\n                    state.calendarCurrent.year,\n                    payload.month\n                );\n                state.calendarCurrent.year = date.year;\n                state.calendarCurrent.month = date.month;\n            }\n            if (payload.day !== undefined) {\n                const date = calendarDateConvert(\n                    state.calendarCurrent.year,\n                    state.calendarCurrent.month,\n                    payload.day\n                );\n                state.calendarCurrent.year = date.year;\n                state.calendarCurrent.month = date.month;\n                state.calendarCurrent.day = date.day;\n            }\n        } else {\n            state.calendarCurrent = {\n                year: payload.year,\n                month: payload.month,\n                day: payload.day\n            };\n        }\n        state.calendarCurrent = Object.assign({}, state.calendarCurrent);\n\n        if (payload.viewMode) {\n            state.calendarViewMode = payload.viewMode;\n        }\n\n        this.next(state);\n    }\n\n    @Action(datepickerNextActions.valueChange)\n    valueChange(\n        state: DatepickerNextState,\n        payload: { type: DatepickerNextValueChangeTypeEnum }\n    ): void {\n        state.valueChange = payload.type;\n        this.next(state);\n    }\n\n    @Action(datepickerNextActions.changeTimeSelected)\n    changeTimeSelected(\n        state: DatepickerNextState,\n        payload: ThyDatepickerNextTimeInfo\n    ): void {\n        if (payload) {\n            state.timeSelected = {\n                hour: payload.hour,\n                minute: payload.minute\n            };\n        } else {\n            state.timeSelected = null;\n        }\n        this.next(state);\n    }\n\n    @Action(datepickerNextActions.setDisableRules)\n    setDisableRules(\n        state: DatepickerNextState,\n        payload: DatepickerNextDisableRules\n    ): void {\n        state.disableRules = Object.assign({}, state.disableRules, payload);\n        this.next(state);\n    }\n}\n"]}
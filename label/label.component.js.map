{"version":3,"file":"label.component.js","sourceRoot":"","sources":["../../.tmp/label/label.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Renderer2, Input, Output, EventEmitter, HostBinding } from '@angular/core';\nimport { inputValueToBoolean } from '../util/helpers';\nimport { helpers } from '../util';\n\nexport type ThyLabelType = 'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger';\n\nconst labelTypeClassesMap: any = {\n    'default': ['thy-label', 'thy-label-default'],\n    'primary': ['thy-label', 'thy-label-primary'],\n    'success': ['thy-label', 'thy-label-success'],\n    'info': ['thy-label', 'thy-label-info'],\n    'warning': ['thy-label', 'thy-label-warning'],\n    'danger': ['thy-label', 'thy-label-danger']\n};\n\n@Component({\n    selector: '[thyLabel]',\n    template: \"<i class=\\\"mr-1\\\" [ngClass]=\\\"beforeIconClass\\\" [ngStyle]=\\\"{'color': _color}\\\" *ngIf=\\\"beforeIconClass\\\"></i><ng-content></ng-content> <ng-content></ng-content><i class=\\\"ml-1\\\" [ngClass]=\\\"afterIconClass\\\" *ngIf=\\\"afterIconClass\\\" (click)=\\\"remove()\\\"></i>\"\n})\nexport class ThyLabelComponent {\n\n    @HostBinding('class.label-has-hover') _thyHasHover = false;\n\n    @HostBinding('class.thy-label--sm') _classNameSM = false;\n\n    @HostBinding('class.thy-label--md') _classNameDM = false;\n\n    @HostBinding('class.thy-label--lg') _classNameLG = false;\n\n    @Input('thySize')\n    set thySize(value: string) {\n        this._classNameSM = (value === 'sm');\n        this._classNameDM = (value === 'md');\n        this._classNameLG = (value === 'lg');\n    }\n\n    private nativeElement: HTMLElement;\n\n    private _typeClassNames: string[] = [];\n\n    private _labelClass?: string;\n\n    private _type?: string;\n\n    private _labelType?: string;\n\n    private _icon: string;\n\n    public beforeIconClass: any;\n\n    public afterIconClass: any;\n\n    public _color?: string;\n\n    @Output() thyOnRemove: EventEmitter<any> = new EventEmitter<any>();\n\n\n    constructor(private el: ElementRef, private renderer: Renderer2) {\n        this.nativeElement = this.el.nativeElement;\n    }\n\n    @Input('thyHasHover')\n    set thyHasHover(value: string) {\n        this._thyHasHover = inputValueToBoolean(value);\n    }\n\n    @Input()\n    set thyLabel(value: ThyLabelType) {\n        this._type = value;\n        this._setClassesByType();\n    }\n\n    @Input()\n    set thyLabelColor(color: string) {\n        this._color = color;\n        this._setLabelCustomColor();\n    }\n\n    @Input()\n    set thyLabelType(labelType: string) {\n        this._labelType = labelType;\n        this._setClassesByType();\n    }\n\n    // 字体前缀，默认 wtf\n    @Input() thyIconPrefix: string;\n\n    @Input()\n    set thyBeforeIcon(icon: string) {\n        this._icon = icon;\n        if (this._icon) {\n            const iconPrefix = this.thyIconPrefix || 'wtf';\n            this.beforeIconClass = [iconPrefix, `${this._icon}`];\n        } else {\n            this.beforeIconClass = null;\n        }\n    }\n\n    @Input()\n    set thyAfterIcon(icon: string) {\n        this._icon = icon;\n        if (this._icon) {\n            const iconPrefix = this.thyIconPrefix || 'wtf';\n            this.afterIconClass = [iconPrefix, `${this._icon}`];\n        } else {\n            this.afterIconClass = null;\n        }\n    }\n\n    private _setClassesByType() {\n        let classNames: string[] = null;\n        if (labelTypeClassesMap[this._type]) {\n            classNames = labelTypeClassesMap[this._type];\n        } else {\n            classNames = ['thy-label'];\n            classNames.push(`thy-label-${this._type}`);\n        }\n        if (this._labelType) {\n            classNames = [...classNames, `thy-label-${this._labelType}`];\n        }\n        // remove old classes\n        this._typeClassNames.forEach(className => {\n            this._removeClass(className);\n        });\n        // add new classes\n        this._typeClassNames = classNames;\n        this._typeClassNames.forEach((className) => {\n            this._addClass(className);\n        });\n    }\n\n    private _setLabelCustomColor() {\n        if (this._color) {\n            if (this._type.indexOf('emboss') > -1) {\n                if (this._type === 'emboss-status') {\n                    this.el.nativeElement.style.color = '#333';\n                } else {\n                    this.el.nativeElement.style.color = this._color;\n                }\n                this.el.nativeElement.style.backgroundColor = helpers.hexToRgb(this._color, 0.1);\n            } else if (this._type.indexOf('outline') > -1) {\n                this.el.nativeElement.style.color = this._color;\n                this.el.nativeElement.style.borderColor = this._color;\n            } else {\n                this.el.nativeElement.style.backgroundColor = this._color;\n            }\n        }\n    }\n\n    private _addClass(className: string) {\n        this.renderer.addClass(this.nativeElement, className);\n    }\n\n    private _removeClass(className: string) {\n        this.renderer.removeClass(this.nativeElement, className);\n    }\n\n    remove() {\n        this.thyOnRemove.emit();\n    }\n}\n"]}
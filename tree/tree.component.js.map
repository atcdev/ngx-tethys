{"version":3,"file":"tree.component.js","sourceRoot":"","sources":["../../.tmp/tree/tree.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Input,\n    Output,\n    ElementRef,\n    ViewEncapsulation,\n    TemplateRef,\n    OnInit,\n    OnChanges,\n    EventEmitter,\n    ContentChild,\n    ComponentFactoryResolver,\n    HostBinding,\n    NgZone,\n    forwardRef,\n    SimpleChanges\n} from '@angular/core';\nimport { ThyTreeNodeData, ThyTreeEmitEvent, ThyTreeNode } from './tree.class';\nimport { helpers } from '../util';\nimport { SortablejsOptions } from 'angular-sortablejs';\nimport { ThyTreeService } from './tree.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { UpdateHostClassService } from '../shared/update-host-class.service';\n\nconst treeTypeClassMap: any = {\n    secondary: ['thy-tree-secondary']\n};\n\n@Component({\n    selector: 'thy-tree',\n    template: \"<div [sortablejs]=\\\"treeNodes\\\" [sortablejsOptions]=\\\"treeNodesSortableOptions\\\" [attr.node-key]=\\\"''\\\"> <thy-tree-node *ngFor=\\\"let node of treeNodes; trackBy: trackByFn; let i = index\\\" [node]=\\\"node\\\" [templateRef]=\\\"templateRef\\\" [emptyChildrenTemplateRef]=\\\"emptyChildrenTemplate\\\" [thyAsync]=\\\"thyAsync\\\" [thyDraggable]=\\\"thyDraggable\\\" [thyShowExpand]=\\\"thyShowExpand\\\" [thyMultiple]=\\\"thyMultiple\\\" [thyTitleTruncate]=\\\"thyTitleTruncate\\\" (thyOnClick)=\\\"thyOnClick.emit($event)\\\" (thyOnExpandChange)=\\\"thyOnExpandChange.emit($event)\\\" > </thy-tree-node> </div> \",\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyTreeComponent),\n            multi: true\n        },\n        ThyTreeService,\n        UpdateHostClassService\n    ]\n})\nexport class ThyTreeComponent implements ControlValueAccessor, OnInit, OnChanges {\n    private _templateRef: TemplateRef<any>;\n\n    private _emptyChildrenTemplateRef: TemplateRef<any>;\n\n    private _draggable = false;\n\n    private _draggableNode: ThyTreeNode;\n\n    public _selectionModel: SelectionModel<ThyTreeNode>;\n\n    public treeNodesSortableOptions: SortablejsOptions = {\n        group: {\n            name: 'tree-node',\n            put: ['tree-node']\n        },\n        disabled: true,\n        animation: 250,\n        ghostClass: 'thy-sortable-ghost',\n        handle: '.thy-sortable-handle',\n        dragClass: 'thy-sortable-drag',\n        onStart: this._onDraggableStart.bind(this),\n        onAdd: this._onDraggableAdd.bind(this),\n        onUpdate: this._onDraggableUpdate.bind(this)\n    };\n\n    public treeNodes: ThyTreeNode[];\n\n    @Input()\n    set thyNodes(value: ThyTreeNodeData[]) {\n        this.treeNodes = (value || []).map(node => new ThyTreeNode(node, null, this.thyTreeService));\n        this.thyTreeService.treeNodes = this.treeNodes;\n    }\n\n    @Input() thyShowExpand = true;\n\n    @HostBinding(`class.thy-multiple-selection-list`)\n    @Input()\n    thyMultiple = false;\n\n    @Input()\n    set thyDraggable(value: boolean | any) {\n        if (helpers.isBoolean(value)) {\n            this._draggable = value;\n            this.treeNodesSortableOptions.disabled = !value;\n        } else {\n            if (value) {\n                Object.assign(this.treeNodesSortableOptions, value);\n                this._draggable = !this.treeNodesSortableOptions.disabled;\n            }\n        }\n        this.thyTreeDraggableClass = this._draggable;\n    }\n\n    get thyDraggable() {\n        return this._draggable;\n    }\n\n    @Input() thyAsync = false;\n\n    @Input() thyType: string;\n\n    @Input() thyTitleTruncate = true;\n\n    @Output() thyOnClick: EventEmitter<ThyTreeEmitEvent> = new EventEmitter<ThyTreeEmitEvent>();\n\n    @Output() thyOnExpandChange: EventEmitter<ThyTreeEmitEvent> = new EventEmitter<ThyTreeEmitEvent>();\n\n    @Output() thyOnDraggableChange: EventEmitter<ThyTreeEmitEvent> = new EventEmitter<ThyTreeEmitEvent>();\n\n    @ContentChild('treeNodeTemplate')\n    set templateRef(template: TemplateRef<any>) {\n        if (template) {\n            this._templateRef = template;\n        }\n    }\n\n    get templateRef() {\n        return this._templateRef;\n    }\n\n    @ContentChild('emptyChildrenTemplate') emptyChildrenTemplate: TemplateRef<any>;\n    set emptyChildrenTemplateRef(template: TemplateRef<any>) {\n        if (template) {\n            this._emptyChildrenTemplateRef = template;\n        }\n    }\n\n    get emptyChildrenTemplateRef() {\n        return this._emptyChildrenTemplateRef;\n    }\n\n    @HostBinding('class.thy-tree') thyTreeClass = true;\n\n    @HostBinding('class.thy-tree-draggable') thyTreeDraggableClass = false;\n\n    private _onTouched: () => void = () => {};\n\n    private _onChange: (value: any) => void = (_: any) => {};\n\n    constructor(\n        private ngZone: NgZone,\n        public thyTreeService: ThyTreeService,\n        private elementRef: ElementRef,\n        private updateHostClassService: UpdateHostClassService\n    ) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.thyType && !changes.thyType.isFirstChange) {\n            this._setTreeType();\n        }\n    }\n\n    ngOnInit(): void {\n        this.updateHostClassService.initializeElement(this.elementRef.nativeElement);\n        this._setTreeType();\n        this._instanceSelectionModel();\n    }\n\n    private _setTreeType() {\n        this.updateHostClassService.addClass(treeTypeClassMap[this.thyType]);\n    }\n\n    private _instanceSelectionModel() {\n        this._selectionModel = new SelectionModel<any>(this.thyMultiple);\n    }\n\n    public isSelected(node: ThyTreeNode) {\n        return this._selectionModel.isSelected(node);\n    }\n\n    public toggleTreeNode(node: ThyTreeNode) {\n        if (node && !node.isDisabled) {\n            this._selectionModel.toggle(node);\n        }\n    }\n\n    public trackByFn(index: number, item: any) {\n        return item.key || index;\n    }\n\n    private _formatDraggableEvent(event: any, eventName: string): ThyTreeEmitEvent {\n        const dragToElement: HTMLElement = event.to;\n        const key = dragToElement.getAttribute('node-key');\n        const targetNode = this.thyTreeService.getTreeNode(key);\n        return {\n            eventName,\n            dragNode: this._draggableNode,\n            targetNode: targetNode,\n            event: event\n        };\n    }\n\n    private _onDraggableStart(event: any) {\n        const key = event.from.getAttribute('node-key');\n        if (key) {\n            const node = this.thyTreeService.getTreeNode(key);\n            this._draggableNode = node.children[event.oldIndex];\n        } else {\n            this._draggableNode = this.treeNodes[event.oldIndex];\n        }\n    }\n\n    private _onDraggableUpdate(event: any) {\n        const draggableEvent = this._formatDraggableEvent(event, 'draggableChange');\n        this.thyTreeService.resetSortedTreeNodes(this.treeNodes);\n        this.ngZone.runTask(() => {\n            this.thyOnDraggableChange.emit(draggableEvent);\n        });\n    }\n\n    private _onDraggableAdd(event: any) {\n        const draggableEvent = this._formatDraggableEvent(event, 'draggableChange');\n        this.thyTreeService.resetSortedTreeNodes(this.treeNodes);\n        this.ngZone.runTask(() => {\n            this.thyOnDraggableChange.emit(draggableEvent);\n        });\n    }\n\n    writeValue(value: ThyTreeNodeData[]): void {\n        this.thyNodes = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouched = fn;\n    }\n\n    // region 公开出去函数\n\n    public selectTreeNode(node: ThyTreeNode) {\n        this._selectionModel.select(node);\n    }\n\n    public getRootNodes(): ThyTreeNode[] {\n        return this.treeNodes;\n    }\n\n    public getSelectedNode(): ThyTreeNode {\n        return this._selectionModel.selected[0];\n    }\n\n    public getSelectedNodes(): ThyTreeNode[] {\n        return this._selectionModel.selected;\n    }\n\n    public getExpandedNodes(): ThyTreeNode[] {\n        return this.thyTreeService.getExpandedNodes();\n    }\n\n    public addTreeNode(node: ThyTreeNodeData, parent?: ThyTreeNode, index = -1) {\n        if (parent) {\n            parent.addChildren(node, index);\n        } else {\n            if (index > -1) {\n                this.treeNodes.splice(index, 0, new ThyTreeNode(node, null, this.thyTreeService));\n            } else {\n                this.treeNodes.push(new ThyTreeNode(node, null, this.thyTreeService));\n            }\n        }\n    }\n\n    public deleteTreeNode(node: ThyTreeNode) {\n        if (this.isSelected(node)) {\n            this._selectionModel.toggle(node);\n        }\n        this.thyTreeService.deleteTreeNode(node);\n    }\n\n    // endregion\n}\n"]}
{"version":3,"file":"base-form-check.component.js","sourceRoot":"","sources":["../../.tmp/shared/base-form-check.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\nimport { HostBinding, Input, ChangeDetectorRef } from '@angular/core';\nimport { inputValueToBoolean } from '../util/helpers';\nimport { ThyTranslate } from './translate';\n\nconst noop = () => {};\n\nexport class ThyFormCheckBaseComponent implements ControlValueAccessor {\n    // The internal data model\n    _innerValue: boolean = null;\n\n    _disabled = false;\n\n    private onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    _labelText: string;\n\n    @HostBinding('class.form-check') _isFormCheck = true;\n\n    @HostBinding('class.form-check-inline') _isFormCheckInline = false;\n\n    @HostBinding('class.form-check-checked') _isChecked = false;\n\n    @Input()\n    set thyInline(value: boolean) {\n        this._isFormCheckInline = inputValueToBoolean(value);\n    }\n\n    @Input()\n    set thyLabelText(value: string) {\n        this._labelText = value;\n    }\n\n    @Input()\n    set thyLabelTextTranslateKey(value: string) {\n        if (value) {\n            this._labelText = this.thyTranslate.instant(value);\n        } else {\n            this._labelText = '';\n        }\n    }\n\n    @Input()\n    set thyDisabled(value: boolean) {\n        this.setDisabledState(inputValueToBoolean(value));\n    }\n\n    writeValue(obj: boolean): void {\n        if (obj !== this._innerValue) {\n            this._innerValue = obj;\n            this._isChecked = !!this._innerValue;\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.markForCheck();\n    }\n\n    updateValue(value: boolean): void {\n        this._innerValue = value;\n        this._isChecked = !!this._innerValue;\n        this.onChangeCallback(value);\n        this.markForCheck();\n    }\n\n    constructor(protected thyTranslate: ThyTranslate, protected changeDetectorRef?: ChangeDetectorRef) {}\n\n    change() {\n        this.updateValue(!this._innerValue);\n    }\n\n    markForCheck() {\n        if (this.changeDetectorRef) {\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n}\n"]}
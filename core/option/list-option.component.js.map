{"version":3,"file":"list-option.component.js","sourceRoot":"","sources":["../../../.tmp/core/option/list-option.component.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EACH,SAAS,EACT,KAAK,EACL,WAAW,EACX,UAAU,EACV,iBAAiB,EACjB,MAAM,EAEN,cAAc,EACd,YAAY,EACZ,QAAQ,EACX,MAAM,eAAe,CAAC;AAEvB,6DAA6D;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,oBAAoB,CAAC;AAEzD,IAAI,gBAAgB,GAAG,CAAC,CAAC;AAczB;;GAEG;AACH,MAAM,CAAC,IAAM,2BAA2B,GACpC,IAAI,cAAc,CAA4B,6BAA6B,CAAC,CAAC;AAOjF;IAyBI,gCACW,OAAgC,EAC/B,cAAiC;IACzC,oBAAoB;IACoC,mBAA8C;QAH/F,YAAO,GAAP,OAAO,CAAyB;QAC/B,mBAAc,GAAd,cAAc,CAAmB;QAEe,wBAAmB,GAAnB,mBAAmB,CAA2B;QA3BpE,kBAAa,GAAG,IAAI,CAAC;QAEjC,UAAK,GAAG,QAAQ,CAAC;QAEb,cAAS,GAAG,CAAC,CAAC,CAAC;QAEpC,OAAE,GAAG,qBAAmB,gBAAgB,EAAI,CAAC;IAwBtD,CAAC;IAnBD,sBAAI,+CAAW;aAAf,UAAgB,KAAc;YAC1B,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAMD,sBAAI,4CAAQ;QAFZ,sCAAsC;aAEtC;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;;;OAAA;IAYD,wCAAO,GAAP,UAAQ,KAAY;QAChB,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,qCAAqC;IACrC,0BAA0B;IAC1B,8DAA8D;IAC9D,IAAI;IAEJ,sDAAsD;IACtD,sCAAsC;IACtC,0CAA0C;IAC1C,IAAI;IAEJ,gDAAe,GAAf;QACI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED,kDAAiB,GAAjB;QACI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACH,yCAAQ,GAAR;QACI,OAAO,EAAE,CAAC;IACd,CAAC;IA/DqC;QAArC,WAAW,CAAC,uBAAuB,CAAC;;iEAAsB;IAEjC;QAAzB,WAAW,CAAC,WAAW,CAAC;;yDAAkB;IAEb;QAA7B,WAAW,CAAC,eAAe,CAAC;;6DAAgB;IAEpC;QAAR,KAAK,EAAE;;sDAA8C;IAE7C;QAAR,KAAK,EAAE;;4DAAe;IAGvB;QADC,KAAK,EAAE;;;6DAGP;IAE8B;QAA9B,WAAW,CAAC,gBAAgB,CAAC;;4DAAoB;IAIlD;QADC,WAAW,CAAC,cAAc,CAAC;;;0DAG3B;IAYD;QADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACnB,KAAK;;yDAGnB;IAtCQ,sBAAsB;QAJlC,SAAS,CAAC;YACP,QAAQ,EAAE,mCAAmC;YAC7C,QAAQ,EAAE,qJAAqJ;SAClK,CAAC;QA8BO,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,2BAA2B,CAAC,CAAA;yCAHhC,UAAU;YACF,iBAAiB;OA3BpC,sBAAsB,CAkElC;IAAD,6BAAC;CAAA,AAlED,IAkEC;SAlEY,sBAAsB","sourcesContent":["import {\n    Component,\n    Input,\n    HostBinding,\n    ElementRef,\n    ChangeDetectorRef,\n    Inject,\n    forwardRef,\n    InjectionToken,\n    HostListener,\n    Optional\n} from '@angular/core';\nimport { FocusableOption, FocusOrigin, Highlightable } from '@angular/cdk/a11y';\n// import { SelectionModel } from '@angular/cdk/collections';\nimport { inputValueToBoolean } from '../../util/helpers';\n\nlet _uniqueIdCounter = 0;\n\nexport interface IThyOptionParentComponent {\n    multiple?: boolean;\n    // selectionModel: SelectionModel<ThyListOptionComponent>;\n    // 选择，取消选择 option\n    toggleOption(option: ThyListOptionComponent, event?: Event): void;\n    // 设置当前选项为激活状态，即 hover 状态\n    setActiveOption(option: ThyListOptionComponent, event?: Event): void;\n    // 滚动到当前的选项\n    scrollIntoView(option: ThyListOptionComponent): void;\n    isSelected(option: ThyListOptionComponent): boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const THY_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IThyOptionParentComponent>('THY_OPTION_PARENT_COMPONENT');\n\n\n@Component({\n    selector: 'thy-list-option,[thy-list-option]',\n    template: \"<ng-content></ng-content> <span class=\\\"text-light checked-icon\\\" *ngIf=\\\"parentSelectionList.multiple\\\"> <i class=\\\"wtf wtf-checked\\\"></i> </span>\"\n})\nexport class ThyListOptionComponent implements Highlightable {\n\n    @HostBinding(`class.thy-list-option`) _isListOption = true;\n\n    @HostBinding(`attr.role`) _role = 'option';\n\n    @HostBinding(`attr.tabindex`) _tabIndex = -1;\n\n    @Input() id = `thy-list-option-${_uniqueIdCounter++}`;\n\n    @Input() thyValue: any;\n\n    @Input()\n    set thyDisabled(value: boolean) {\n        this.disabled = inputValueToBoolean(value);\n    }\n\n    @HostBinding(`class.disabled`) disabled?: boolean;\n\n    /** Whether the option is selected. */\n    @HostBinding(`class.active`)\n    get selected() {\n        return this.parentSelectionList.isSelected(this);\n    }\n\n    constructor(\n        public element: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        /** @docs-private */\n        @Optional() @Inject(THY_OPTION_PARENT_COMPONENT) public parentSelectionList: IThyOptionParentComponent\n    ) {\n\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.parentSelectionList.toggleOption(this, event);\n        this.parentSelectionList.setActiveOption(this);\n    }\n\n    // @HostListener('focus', ['$event'])\n    // onFocus(event: Event) {\n    //     this.parentSelectionList.setFocusedOption(this, event);\n    // }\n\n    /** Allows for programmatic focusing of the option. */\n    // focus(origin?: FocusOrigin): void {\n    //     this.element.nativeElement.focus();\n    // }\n\n    setActiveStyles(): void {\n        this.element.nativeElement.classList.add('hover');\n        this.parentSelectionList.scrollIntoView(this);\n    }\n\n    setInactiveStyles(): void {\n        this.element.nativeElement.classList.remove('hover');\n    }\n\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return '';\n    }\n}\n"]}
{"version":3,"file":"util.js","sourceRoot":"","sources":["../../.tmp/datepicker/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { isNumber, isDate, isObject } from '../util/helpers';\nimport { DatepickerValueShowTypesEnum } from './i.datepicker';\n\nexport function datepickerUtilIdentificationValueType(value: any): DatepickerValueShowTypesEnum {\n    let res;\n    if (isDate(value)) {\n        res = DatepickerValueShowTypesEnum.dateObject;\n    } else if (isObject(value)) {\n        if (value.hasOwnProperty('date')) {\n            const result = datepickerUtilIdentificationValueType(value.date);\n            switch (result) {\n                case DatepickerValueShowTypesEnum.dateObject:\n                    res = DatepickerValueShowTypesEnum.datepickerObject;\n                    break;\n                case DatepickerValueShowTypesEnum.dateTime:\n                    res = DatepickerValueShowTypesEnum.datepickerTimeObject;\n                    break;\n                case DatepickerValueShowTypesEnum.dateTimeLong:\n                    res = DatepickerValueShowTypesEnum.datepickerTimeLongObject;\n                    break;\n                case DatepickerValueShowTypesEnum.nullValue:\n                    res = DatepickerValueShowTypesEnum.datepickerNullValue;\n                    break;\n                default:\n                    res = result;\n            }\n        } else {\n            res = DatepickerValueShowTypesEnum.datepickerNullValue;\n        }\n    } else if (isNumber(value)) {\n        if (value.toString().length <= 10) {\n            res = DatepickerValueShowTypesEnum.dateTime;\n        } else if (value.toString().length === 13) {\n            res = DatepickerValueShowTypesEnum.dateTimeLong;\n        } else {\n            res = DatepickerValueShowTypesEnum.nullValue;\n        }\n    } else {\n        res = DatepickerValueShowTypesEnum.nullValue;\n    }\n    return res;\n}\n\nexport function datepickerUtilConvertToDatepickerObject(value: any, valueType?: DatepickerValueShowTypesEnum) {\n    const _valueType = valueType || datepickerUtilIdentificationValueType(value);\n    let _value;\n    switch (_valueType) {\n        case DatepickerValueShowTypesEnum.dateTime:\n            _value = {\n                date: new Date(value * 1000),\n                with_time: value.with_time\n            };\n            break;\n        case DatepickerValueShowTypesEnum.dateTimeLong:\n            _value = {\n                date: new Date(value),\n                with_time: value.with_time\n            };\n            break;\n        case DatepickerValueShowTypesEnum.datepickerTimeObject:\n            _value = {\n                date: new Date(value.date * 1000),\n                with_time: value.with_time\n            };\n            break;\n        case DatepickerValueShowTypesEnum.datepickerObject:\n            _value = {\n                date: value.date,\n                with_time: value.with_time\n            };\n            break;\n        case DatepickerValueShowTypesEnum.datepickerNullValue:\n            _value = {\n                date: value.date,\n                with_time: value.with_time\n            };\n            break;\n        case DatepickerValueShowTypesEnum.nullValue:\n            _value = {\n                date: value,\n                with_time: false\n            };\n            break;\n        default:\n            _value = {\n                date: null,\n                with_time: false\n            };\n            break;\n    }\n    return _value;\n}\n\nexport function daterangepickerUtilIdentificationValueType(value: any): DatepickerValueShowTypesEnum {\n    if (value) {\n        if (isObject(value.begin) && value.begin.hasOwnProperty('date')) {\n            if (value.begin.date) {\n                return DatepickerValueShowTypesEnum.daterangepickerTimeObject;\n            } else {\n                return DatepickerValueShowTypesEnum.daterangepickerNullValueObject;\n            }\n        } else if (isNumber(value.begin)) {\n            return DatepickerValueShowTypesEnum.daterangepickerTime;\n        } else {\n            return DatepickerValueShowTypesEnum.daterangepickerNullValue;\n        }\n    } else {\n        return DatepickerValueShowTypesEnum.daterangepickerNullValue;\n    }\n}\n\nexport function daterangepickerUtilConvertToDaterangepickerObject(value: any, valueType?: DatepickerValueShowTypesEnum) {\n    const _valueType = valueType || daterangepickerUtilIdentificationValueType(value);\n    let _value: any;\n    switch (_valueType) {\n        case DatepickerValueShowTypesEnum.daterangepickerTime:\n            _value = [new Date(value.begin * 1000), new Date(value.end * 1000)];\n            break;\n        case DatepickerValueShowTypesEnum.daterangepickerTimeObject:\n            _value = [new Date(value.begin.date * 1000), new Date(value.end.date * 1000)];\n            break;\n        case DatepickerValueShowTypesEnum.daterangepickerNullValueObject:\n            _value = [];\n            break;\n        case DatepickerValueShowTypesEnum.daterangepickerNullValue:\n            _value = [];\n            break;\n        default:\n            console.error('Can not matched value type!');\n            break;\n    }\n    return _value;\n}\n\nexport class DatepickerUtil {\n    constructor() {}\n}\n"]}